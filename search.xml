<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[FRUITS-Patents]]></title>
    <url>%2F2019%2F01%2F22%2FFRUITS-Patents%2F</url>
    <content type="text"><![CDATA[A smart phone device that can be used with AR glasses[P]. 201820787699.4 A smartphone device that can be used with AR glasses, comprising a smartphone body, the device further comprising AR glasses and a data connection line. One end of the data connection line is connected to the AR glasses, the other end is connected to the phone body when in use. It solves the problems that existed in the past, realizes the use of smartphones when using a smartphone, connects AR phones when using AR, and can use AR glasses. At the same time, the connection is stored through the receiving card. Easy to use, it is convenient for storage. Vending machine based on nano-adsorption type picking device[P]. 201821119511.5 The embodiment of the present application discloses a vending machine based on a nano-adsorption pick-up device, which comprises: a cabinet, a commodity barrier, a commodity display rack, a control box, a pick-up device, a cargo lane, a pick-up port, and a pick-up device. The surface of the pickup gripper is provided with a nano-adhesive sticker, which can be inserted into the interior of the cabinet through the commodity barrier through the pick-up device of the pick-up device, and the product on the merchandise display rack can be displayed through the nano-adhesive sticker on the surface of the pick-up gripper. After being sucked, the pickup of the pick-up device is retracted to the commodity barrier barrier, so that the goods sucked by the pick-up hand are dropped to the cargo lane under the barrier of the commodity barrier barrier, so that the consumer can pick up the goods Compared with the pick-up device of the conventional vending machine, the pneumatic vacuuming device of the conventional vending machine and the pick-up device in the form of a suction nozzle, the vending machine based on the nano-adsorption picking device of the utility model has a simpler structure and is easier to structure. Made, easy to repair, and low cost. Device for constructing a separate space on a long-distance vehicle[P]. 201820924969.1 Means for constructing a separate space on a long-distance vehicle, the device comprising a device door and a device frame. Using the utility model to isolate and divide the bed of the above-mentioned vehicle and constructing a separate space for each passenger. The new device integrating entertainment, office and rest can satisfy the needs of all kinds of passengers to the greatest extent, add interest to the journey, and reduce the contradiction between strangers to contribute to building a harmonious socialist society. At the same time, the special positioning lock is used, so that others will not be easily disturbed during the break, and the safety of valuables will be guaranteed. A new folding facility for creating independent spaces[P]. 201820920961.8 The embodiment of the present application discloses a folding type new facility for creating an independent space for a bunk of a long-distance vehicle, the facility comprising: a rack, a first door, and a second door, the first side block, the plate set, the second side baffle set, and the top baffle set are respectively connected by a plurality of baffles, between the adjacent two baffles, between the first side baffle set and the first door, And a foldable structure is disposed between the second side baffle set and the second door; the facility can be pre-folded and placed under the bunk of the sleeper, and the passenger can take it out and deploy it when in use, in an open type The facility in the sleeper compartment creates a separate space that provides a full range of sound insulation and odors, significantly enhancing the comfort of passengers on long-distance vehicles. After the passengers have used the facility, they can fold and return the facility. The operation is simple, and the space in the compartment is saved.]]></content>
      <categories>
        <category>Fruits</category>
      </categories>
      <tags>
        <tag>Patents</tag>
        <tag>Fruits</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Fitness-Recipes]]></title>
    <url>%2F2019%2F01%2F22%2FFitness-Recipes%2F</url>
    <content type="text"><![CDATA[饮食注意： 上午和下午感觉饥饿可以选择吃低糖类的水果（苹果、梨、猕猴桃、葡萄、樱桃、橘子、桃……） 尽量不吃外面买的任何已加工食物（如面包除全麦，饼干，饮料，火腿，瓜子等） 绿叶蔬菜如白菜，菠菜，芹菜等含热量很低，可多食用 饭菜应注意少油少盐 #####训练注意事项： 训练前补充足够水分（且非运动饮料） 训练前至少一小时内需少量进餐（可以是一个水果） 训练时穿运动服及运动鞋，带水杯 #####健身饮食计划 体测结果分析身体脂肪含量偏高。 因缺乏锻炼，体质较差。肌肉力量欠缺，身体维度测量表明腰臀比例偏高。 因注重整体的体能训练，让身体恢复较好体能，同时达到目标整体脂肪比例下降。 营养饮食计划：（以少食多餐为主） 第一餐（早餐） 主食可任意选一样（玉米1根、红薯1个、馒头1个、包子2个、面包2片） 粥和豆浆、牛奶任选其一 必吃鸡蛋1个 【早餐常见的小面、油条、油饼之类的由于太多热量不建议摄入】 第二餐（上午加餐） 水果任选一种（低糖分） 鸡蛋1-2个（去掉蛋黄） 第三餐（午餐） 主食可任意选一种（米饭1碗，中小碗、馒头较大1个，较小2个） 肉类尽量选择含有蛋白质的鸡胸肉、牛瘦肉、鱼肉、虾肉为主 蔬菜适量（常见的各种蔬菜最好选择顺序从凉拌、清蒸、煮、炖、炒） 【油炸食品尽量不吃】 第四餐（晚餐） 主食可选任意一种（米饭1小碗、馒头1小个、粥1小碗） 蔬菜适量（少油少盐） 红薯+紫薯+蛋白质可以用来代替上面的1.+2. 【晚餐切记吃太咸，吃太油】 禁忌 杜绝烟酒饮料（特别是碳酸饮料） 尽量不吃零食以及各种甜食 由于西瓜、荔枝含糖分太高减脂期尽量不吃 烧烤和火锅减脂期间尽量不吃]]></content>
      <categories>
        <category>Fitness</category>
      </categories>
      <tags>
        <tag>Recipes</tag>
        <tag>Fitness</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3D打印-总结]]></title>
    <url>%2F2019%2F01%2F22%2F3D%E6%89%93%E5%8D%B0-%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[在设计板子的外壳的时候需要注意的事情 板子需要插接导线，所以需要预先留出缺口； 外壳倒角。防止被割伤、使板子不至于太过于脆弱； 需要注意板子外壳的插接结构； 需要注意开发板的散热问题； 要给自己制作的外壳留下一个logo； 3D打印的格式现在最流行的是.stl格式，只要是能够保存成.stl文件的建模工具都可以进行 3D打印。在保存文档的时候需要选用二进制的文档。原因是这样的文件的大小非常小。 单位必须选择mm。这个是标准，不能够改变。 画图时的优秀素材网站 Thingiverse； GrabCad 。需要在搜索框中进行搜查。这个非常的高大上，有很多的资源 可以进行搜索。 格式转换、修复软件 OpenSCAD. STL下载。 MashLab，用于格式的转换非常的方便。 Meshmixer。用它进行纠错，用它打开，然后重新另存为一下就好了。 这个是专门用于修复stl格式文件的。 Accutrans。几乎所有的软件格式都能够进行转换。 在将自己的设计发送给其它公司进行出产品的时候，需要注意。 需将文件另存为stp、sgs格式，这样的话别人无法盗用你的东西。]]></content>
      <categories>
        <category>3D打印</category>
      </categories>
      <tags>
        <tag>3D打印</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[素养-段子]]></title>
    <url>%2F2019%2F01%2F22%2F%E7%B4%A0%E5%85%BB-%E6%AE%B5%E5%AD%90%2F</url>
    <content type="text"><![CDATA[姑娘们啊！哪有那麽多白马啊？找个驴凑合得了，别等到有一天驴都被抢没了，剩一堆骡子… 所谓美女，三分长相七分打扮、所谓气质，三分才气七分装蒜、所谓温柔，三分忍让七分压抑。 下辇子要做筷子，就不孤单了！ 你的话，我连标点符号都不信。 陪我一起数星星吧，你智商低你就数月亮吧！ 我太佩服我自己了，有时候照镜子的时候都给自己磕头！ 想你想得饭都吃不下，真是太恶心了！ 为什麽我一直感觉不幸福，难道是当幸福来敲门的时候，我不在家? 别和我谈理想，戒了！ 跌倒了，爬起来再哭~~~ 低调！才是最牛B的炫耀！ 我能抵抗一切，除了诱惑……… 不是你不笑，一笑粉就掉！ 活着的时候开心点，因为我们要死很久。 我这人从不记仇，一般有仇当场我就报了。 没什么事不要找我，有事更不用找我！ 我又不是人民币，怎么能让人人都喜欢我？ 问：你喜欢我哪一点？答：我喜欢你离我远一点！ 诸葛亮出山前，也没带过兵！凭啥我就要工作经验？ 珍惜生活——上帝还让你活着，就肯定有他的安排。 雷锋做了好事不留名，但是每一件事情都记到日记里面。 自己选择45°仰视别人，就休怪他人135°俯视着看你。 我允许你走进我的世界，但绝不允许你在我的世界里走来走去。 一分钟有多长？这要看你是蹲在厕所里面，还是等在厕所外面…… 铁饭碗的真实含义不是在一个地方吃一辈子饭，而是一辈子到哪儿都有饭吃。 就算是一坨屎，也有遇见屎壳郎的那天。所以你大可不必为今天的自己有太多担忧。 “恋”是个很强悍的字。它的上半部取自“变态”的“变”，下半部取自“变态”的“态”。 同志们：别炒股，风险太大了，还是做豆腐最安全！做硬了是豆腐干，做稀了是豆腐脑，做薄了是豆腐皮，做没了是豆浆，放臭了是臭豆腐！稳赚不亏呀！]]></content>
      <categories>
        <category>素养</category>
      </categories>
      <tags>
        <tag>素养</tag>
        <tag>段子</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[素养-好字]]></title>
    <url>%2F2019%2F01%2F22%2F%E7%B4%A0%E5%85%BB-%E5%A5%BD%E5%AD%97%2F</url>
    <content type="text"><![CDATA[芮：草初生长的样子、小巧玲珑的样子景茹：景星庆云、茹古涵今。操行清修 才术通敏淅若珺]]></content>
      <categories>
        <category>素养</category>
      </categories>
      <tags>
        <tag>素养</tag>
        <tag>好字</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[素养-情书]]></title>
    <url>%2F2019%2F01%2F22%2F%E7%B4%A0%E5%85%BB-%E6%83%85%E4%B9%A6%2F</url>
    <content type="text"><![CDATA[写给你的情书，无需多言，三行足矣。油墨清香，优雅宁静，恰如你一夜冬雪，梅花初开，初遇般的惊喜两手相握，两心相依，许你一世思念那么长，长如泉涌，涌出一条甲子湖相似的旋律，温柔的音符，那首歌都有你我要忍着疼痛，走在你的前面。我们会永远在一起，人不在而心在一起。当往事随风，伴我们一起寻觅，寻觅人生的真谛。如果有一天我突然告诉你，我想你了，你要记住，不是现在才想，而是憋不住了。在相对的视线里才发现什么是缘，在风起的时候让你感受到什么是暖。秋依旧，念如初这是最老套也是最感人的情话只要我一发呆你的样子就钻进我的脑子里，见鬼，以前我的脑子里可全是吃的。当我总忍不住给你发“吃了吗”、“在干嘛”等等有的没的无聊微信时，我就知道一切都完了。为什么我这么一个无比害羞的人，一下子就再也不害臊了，那是因为你啊，我的小甜心]]></content>
      <categories>
        <category>素养</category>
      </categories>
      <tags>
        <tag>素养</tag>
        <tag>情书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[素养-古诗文]]></title>
    <url>%2F2019%2F01%2F22%2F%E7%B4%A0%E5%85%BB-%E5%8F%A4%E8%AF%97%E6%96%87%2F</url>
    <content type="text"><![CDATA[说（shui）难（nan）凡说之难：非吾知之有以说之之难也，又非吾辩之能明吾意之难也，又非吾敢横失而能尽之难也。凡说之难：在知所说之心，可以吾说当之。所说出于为名高者也，而说之以厚利，则见下节而遇卑贱，必弃远矣。所说出于厚利者也，而说之以名高，则见无心而远事情，必不收矣。所说阴为厚利而显为名高者也，而说之以名高，则阳收其身而实疏之；说之以厚利，则阴用其言显弃其身矣。此不可不察也。 夫事以密成，语以泄败。未必其身泄之也，而语及所匿之事，如此者身危。彼显有所出事，而乃以成他故，说者不徒知所出而已矣，又知其所以为，如此者身危。规异事而当，知者揣之外而得之，事泄于外，必以为己也，如此者身危。周泽未渥也，而语极知，说行而有功，则德忘；说不行而有败，则见疑，如此者身危。贵人有过端，而说者明言礼义以挑其恶，如此者身危。贵人或得计而欲自以为功，说者与知焉，如此者身危。强以其所不能为，止以其所不能已，如此者身危。故与之论大人，则以为间己矣；与之论细人，则以为卖重。论其所爱，则以为借资；论其所憎，则以为尝己也。径省其说，则以为不智而拙之；米盐博辩，则以为多而交之。略事陈意，则曰怯懦而不尽；虚事广肆，则曰草野而倨侮。此说之难，不可不知也。 凡说之务，在知饰所说之所矜而灭其所耻。彼有私急也，必以公义示而强之。其意有下也，然而不能已，说者因为之饰其美而少其不为也。其心有高也，而实不能及，说者为之举其过而见其恶，而多其不行也。有欲矜以智能，则为之举异事之同类者，多为之地，使之资说于我，而佯不知也以资其智。欲内相存之言，则必以美名明之，而微见其合于私利也。欲陈危害之事，则显其毁诽而微见其合于私患也。誉异人与同行者，规异事与同计者。有与同污者，则必以大饰其无伤也；有与同败者，则必以明饰其无失也。彼自多其力，则毋以其难概之也；自勇之断，则无以其谪怒之；自智其计，则毋以其败穷之。大意无所拂悟，辞言无所系縻，然后极骋智辩焉。此道所得，亲近不疑而得尽辞也。伊尹为宰，百里奚为虏，皆所以干其上也。此二人者，皆圣人也；然犹不能无役身以进加，如此其污也！今以吾言为宰虏，而可以听用而振世，此非能仕之所耻也。夫旷日离久，而周泽未渥，深计而不疑，引争而不罪，则明割利害以致其功，直指是非以饰其身，以此相持，此说之成也。 昔者郑武公欲伐胡，故先以其女妻胡君以娱其意。因问于群臣，“吾欲用兵，谁可伐者？”大夫关其思对曰：“胡可伐。”武公怒而戮之，曰：“胡，兄弟之国也。子言伐之，何也？”胡君闻之，以郑为亲己，遂不备郑。郑人袭胡，取之。宋有富人，天雨墙坏。其子曰：“不筑，必将有盗。”其邻人之父亦云。暮而果大亡其财。其家甚智其子，而疑邻人之父。此二人说者皆当矣，厚者为戮，薄者见疑，则非知之难也，处知则难也。故绕朝之言当矣，其为圣人于晋，而为戮于秦也，此不可不察。 昔者弥子瑕有宠于卫君。卫国之法：窃驾君车者罪刖。弥子瑕母病，人间往夜告弥子，弥子矫驾君车以出。君闻而贤之，曰：“孝哉！为母之故，忘其刖罪。”异日，与君游于果园，食桃而甘，不尽，以其半啖君。君曰：“爱我哉！忘其口味以啖寡人。”及弥子色衰爱弛，得罪于君，君曰：“是固尝矫驾吾车，又尝啖我以余桃。”故弥子之行未变于初也，而以前之所以见贤而后获罪者，爱憎之变也。故有爱于主，则智当而加亲；有憎于主，则智不当见罪而加疏。故谏说谈论之士，不可不察爱憎之主而后说焉。 夫龙之为虫也，柔可狎而骑也；然其喉下有逆鳞径尺，若人有婴之者，则必杀人。人主亦有逆鳞，说者能无婴人主之逆鳞，则几矣。 译文 大凡进说的困难：不是难在我的才智能够用来向君主进说，也不是难在我的口才能够阐明我的意见，也不是难在我敢毫无顾忌地把看法全部表达出来。大凡进说的困难：在于了解进说对象的心理，以便用我的说法适应他。进说对象想要追求美名的，却用厚利去说服他，就会显得节操低下而得到卑贱待遇，必然受到抛弃和疏远。进说对象想要追求厚利的，却用美名去说服他，就会显得没有心计而又脱离实际，必定不会被接受和录用。进说对象暗地追求原利而表面追求美名的，用美名向他进说，他就会表面上录用而实际上疏远进说者；用厚利向他进说，他就会暗地采纳进说者的主张而表面疏远进说者。这是不能不明察的。事情因保密而成功，谈话因泄密而失败。未必进说者本人泄露了机密，而是谈话中触及到君主心中隐匿的事，如此就会身遭危险。君主表面上做这件事，心里却想借此办成别的事，进说者不但知道君主所做的事，而且知道他要这样做的意图，如此就会身遭危险。进说者筹划一件不平常的事情并且符合君主心意，聪明人从外部迹象上把这事猜测出来了，事情泄露出来，君主一定认为是进说者泄露的，如此就会身遭危险。君主恩泽未厚，进说者谈论却尽其所知，如果主张得以实行并获得成功，功德就会被君主忘记；主张行不适而遭到失败，就会被君主怀疑，如此就会身遭危险。君主有过错，进说者倡言礼义来挑他的毛病，如此就会身遭危险。君主有时计谋得当而想自以为功，进说者同样知道此计，如此就会身遭危险。勉强君主去做他不能做的事，强迫君主停止他不愿意停止的事，如此就会身遭危险。所以进说者如果和君主议论大臣，就被认为是想离间君臣关系；和君主谈论近侍小臣，就被认为是想卖弄身价。谈论君主喜爱的人，就被认为是拉关系；谈论君主憎恶的人，就被认为是搞试探。说话直截了当，就被认为是不聪明而笨拙；谈话琐碎详尽，就被认为是罗嗦而冗长。简略陈述意见，就被认为是怯懦而不敢尽言；谋事空泛放任，就被认为是粗野而不懂礼貌。这些进说的困难，是不能不知道的。 大凡进说的要领，在于懂得粉饰进说对象自夸之事而掩盖他所自耻之事。君主有私人的急事，进说者一定要指明这合乎公义而鼓励他去做。君主有卑下的念头，但是不能克制，进说者就应把它粉饰成美好的而抱怨他不去干。君主有过高的企求，而实际不能达到，进说者就为他举出此事的缺点并揭示它的坏处，而称赞他不去做。君主想自夸智能，进说者就替他举出别的事情中的同类情况，多给他提供根据，使他从我处借用说法，而我却假装不知道，这样来帮助他自夸才智。进说者想向君主进献与人相安的话，就必须用好的名义阐明它，并暗示它合乎君主私利。进说者想要陈述有危害的事，就明言此事会遭到的毁谤，并暗示它对君主也有害处。进说者称赞另一个与君主行为相同的人，规划另一件与君主考虑相同的事。有和君主污行相同的，就必须对它大加粉饰，说它没有害处；有和君主败迹相同的，就必须对它明言掩锦，说他没有过失。君主自夸力量强大时，就不要用他为难的事去压抑他；君主自以为决断勇敢时，就不要用他的过失去激怒他；君主自以为计谋高明时，就不要用他的败绩去困窘他。进说的主旨没有什么违逆，言辞没有什么抵触，然后就可以充分施展自己的智慧和辩才了。由这条途径得到的，是君主亲近不疑而又能畅所欲言。伊尹做过厨师，百里奚做过奴隶，都是为了求得君主重用。这两个人都是圣人，但还是不能不通过做低贱的事来求得进用，他们的卑下一至于此！假如把我的话看成像厨师和奴隶所讲的一样，而可以来纳来救世，这就不是智能之士感到耻辱的了。经过很长的时间，君主的恩思泽已厚，进说者深入谋划不再被怀疑，据理力争不再会获罪，就可以明确剖析利害来成就君主的功业，直接指明是非来端正君主的言行，能这样相互对待，是进说成功了。 从前郑武公想讨伐胡国，故意先把自己的女儿嫁给胡国君主来使他快乐。然后问群臣：“我想用兵，哪个国家可以讨伐？”大夫关其思回答说：“胡国可以讨伐。”武公发怒而杀了他，说：“胡国是兄弟国家，你说讨伐它，是何道理？”胡国君主听说了，认为郑国和自己友好，于是不再防备郑国。郑国偷袭了胡国，攻占了它。宋国有个富人，下雨把墙淋塌了，他儿子说：“不修的话，必将有盗贼来偷。”邻居的老人也这么说。到了晚上，果然有大量财物被窃。这家富人认为儿子很聪明，却对邻居老人起了疑心。关其思和这位老人的话都恰当，而重的被杀，轻的被怀疑；那么，不是了解情况有困难，而是处理所了解的情况很困难。因此，绕朝的话本是对的，但他在晋国被看成圣人，在秦国却遭杀害，这是不可不注意的。 从前弥子瑕曾受到卫国国君的宠信。卫国法令规定，私自驾驭国君车子的，论罪要处以刖刑。弥子瑕母亲病了，有人抄近路连夜通知弥子瑕，弥子瑕假托君命驾驭君车而出。卫君听说后，却认为他德行好，说：“真孝顺啊！为了母亲的缘故，忘了自己会犯别罪。”另一天，他和卫君在果园游览，吃桃子觉得甜，没有吃完，就把剩下的半个给卫君吃。卫君说：“多么爱我啊！不顾自己口味来给我吃。”等到弥子瑕色衰爱弛时，得罪了卫君，卫君说：“这人本来就曾假托君命私自驾驭我的车子，又曾经把吃剩的桃子给我吃。”所以，虽然弥子瑕的行为和当初并没两样，但先前称贤、后来获罪的原因，是卫君的爱憎有了变化。所以被君主宠爱时，才智就显得恰当而更受亲近；被君主憎恶时，才智就显得不恰当，遭到谴责而更被疏远。所以谏说谈论的人不可不察看君主的爱憎，然后进说。 龙作为一种动物，驯服时可以戏弄着骑它；但它喉下有一尺来长的逆鳞，假使有人动它的话，就一定会受到伤害。君主也有逆鳞，进说者能不触动君主的逆鳞，就差不多了。 七律·到韶山 别梦依稀咒逝川，故园三十二年前。 红旗卷起农奴戟，黑手高悬霸主鞭。 为有牺牲多壮志，敢教日月换新天。 喜看稻菽千重浪，遍地英雄下夕烟。 韶山在湖南省湘潭县，是作者的故乡。一九二七年一月，毛泽东在湖南考察农民运动时曾回到韶山。三个月以后，蒋介石发动了四一二反革命政变，随后五月二十一日湖南军阀许克祥在长沙袭击省总工会、省农民协会等革命团体，屠杀革命群众，这就是马日事变(旧时用韵目代日期，马日即二十一日)。当时韶山成立了农民自卫军，拿着枪和梭镖，准备配合其他农民武装力量进攻长沙。后来反动军队大举进攻韶山，农民自卫军在英勇抵抗后失败。作者在一九五九年六月二十五日至二十七日重返韶山，离一九二七年一月已经三十二年多。这首诗便是对于三十二年来的斗争和胜利的概括。 拙赋周敦颐 或谓予曰：“人谓子拙。”予曰：“巧，窃所耻也，且患世多巧也。”喜而赋之：巧者言，拙者默；巧者劳，拙者逸；巧者贼，拙者德；巧者凶，拙者吉。呜呼！天下拙，刑政彻。上安下顺，风清弊绝。 金铜仙人辞汉歌作者：李贺茂陵刘郎秋风客，夜闻马嘶晓无迹。画栏桂树悬秋香，三十六宫土花碧。魏官牵车指千里，东关酸风射眸子。空将汉月出宫门，忆君清泪如铅水。衰兰送客咸阳道，天若有情天亦老。携盘独出月荒凉，渭城已远波声小。 七律·人民解放军占领南京钟山风雨起苍黄，百万雄师过大江。虎踞龙盘今胜昔，天翻地覆慨而慷。宜将剩勇追穷寇，不可沽名学霸王。天若有情天亦老，人间正道是沧桑。 木兰词·拟古决绝词柬友【作者】纳兰性德 【朝代】清 译文对照 人生若只如初见，何事秋风悲画扇。 等闲变却故人心，却道故人心易变。 骊山语罢清宵半，泪雨零铃终不怨。 何如薄幸锦衣郎，比翼连枝当日愿。 译文 注释与意中人相处应当总像刚刚相识的时候，是那样地甜蜜，那样地温馨，那样地深情和快乐。但你我本应当相亲相爱，却为何成了今日的相离相弃？如今轻易地变了心，你却反而说情人间就是容易变心的。我与你就像唐明皇与杨玉环那样，在长生殿起过生死不相离的誓言，却又最终作决绝之别，即使如此，也不生怨。但你又怎比得上当年的唐明皇呢，他总还是与杨玉环有过比翼鸟、连理枝的誓愿 《墨妙亭记》——苏轼有物必归于尽。而恃形以为固者，尤不可长。虽金石之坚，额而变坏。是欲久存者，反求诸速坏。物之有成必有坏，譬如人之有生必有死，而国之有兴必有亡。可以存存而救亡者无不为，至于无可奈何而后止。 原文 熙宁四年十一月，高邮孙莘老自广德移守吴兴。其明年二月，作墨妙亭于府第之北，逍遥堂之东，取凡境内自汉以来古文遗刻以实之。吴兴自东晋为善地，号为山水清远。其民足于鱼稻蒲莲之利，寡求而不争。宾客非特有事于其地者不至焉。故凡郡守者，率以风流啸咏、投壶饮酒为事。自莘老之至，而岁适大水，上田皆不登，湖人大饥，将相率亡去。莘老大振廪劝分，躬自抚循劳来，出于至诚。富有余者，皆争出谷以佐官，所活至不可胜计。当是时，朝廷方更化立法，使者旁午，以为莘老当日夜治文书，赴期会，不能复雍容自得如故事。而莘老益喜宾客，赋诗饮酒为乐，又以其余暇，网罗遗逸，得前人赋咏数百篇，以为《吴兴新集》，其刻画尚存而僵仆断缺于荒陂野草之间者，又皆集于此亭。是岁十二月，余以事至湖，周览叹息，而莘老求文为记。或以谓余，凡有物必归于尽，而恃形以为固者，尤不可长，虽金石之坚，俄而变坏，至于功名文章，其传世垂后，乃为差久；今乃以此托于彼，是久存者反求助于速坏。此即昔人之惑，而莘老又将深檐大屋以锢留之，推是意也，其无乃几于不知命也夫。余以为知命者，必尽人事，然后理足而无憾。物之有成必有坏，譬如人之有生必有死，而国之有兴必有亡也。虽知其然，而君子之养身也，凡可以久生而缓死者无不用；其治国也，凡可以存存而救亡者无不为，至于不可奈何而后已。此之谓知命。是亭之作否，无可争者，而其理则不可不辨。故具载其说，而列其名物于左云。 译文 熙宁四年十一月,高邮孙莘老从广德调任吴兴太守。第二年二月,在官邸的北面、逍遥堂的东面建造墨妙亭,把吴兴境内从汉以来的古文遗刻都收藏在亭内。吴兴自从东晋以来就是一块美好的地方,号为山水清丽广远。吴兴百姓享受丰足的鱼稻蒲莲物产,他们寡求不争。外地宾客不是有事非来不可一般很少到这里。所以历任郡守,都只是歌咏、酬唱、嬉戏、饮酒。莘老到任时,适逢大水,上等农田都没有收成,湖乡百姓大饥,准备一起出门逃荒。莘老大力开仓赈灾,亲自安抚慰劳灾民,一片至诚。家里富裕有余粮的家庭,都争着拿出自己的谷物来帮助官府赈灾,救活的灾民不可胜数。当时,朝廷正推行改革变法,负责实施新法的使者纷繁来往,人们认为莘老会日以继夜地治理各种文书,到处开会,不可能再有闲情,像往日那样雍容自得悠哉游哉。可是莘老更加喜欢交结宾客,赋诗饮酒,他还在余暇时,网罗遗闻逸事,得到前人赋咏数百篇,编为《吴兴新集》,那些古诗词文章还留存着但是却倒卧在荒土野草之中的刻石，又全都汇集在这个亭子里。这一年十二月,我因事到吴兴,(在墨妙亭里)周览叹息,莘老求我为墨妙亭写一篇文章。有人对我说,所有的东西必然归于尽头,依靠外形牢固的东西,尤其不可能长久,即使坚如金石,也会很快变坏,至于功名文章,流传后世,还算是久远一点,现在孙莘老竟然把这些古文遗刻等文物托给一座亭子来保存,这是保存久长的反而向坏得快的寻求帮助。这早已是昔人的困惑,莘老用深檐大屋来保存文物,推断他的用意,难道不是有点不知天命吗?我认为了解事物发展规律的人，一定能够知晓自己从事的工作、事业，这以后就懂得道理而没有遗憾了。事情有成功必有失败,譬如人有生必有死,国家有兴盛必有衰亡。虽然知道这个道理,但是君子保养身体,凡是可以使生命长久延缓衰老的法子没有不尽力去做的,他们治理国家,凡是可以保存国家免于破亡的法子没有不尽力去做的,一直到无能为力了才罢休。这就叫知天命。这座亭子该不该建造,不值得争论,但是其中的道理不能不辨别清楚。所以我把这些情况全部记载下来,并且把墨妙亭里的各种文物记录如下。 爱情短诗 青楼斜影疏，良人如初顾 纤手如玉脂，淡妆胜罗敷 引君入香堂，言词论今古 君心城切切，妾意情楚楚 盟定三生约，共谱月下曲 岂料鸳鸯棒，分飞相思苦 纵有抱柱信，不能容世俗 君子世无双，陌上人如玉 不能同世生，但求同归土刘梦德文集-望赋 龙门不见兮，云雾苍苍 乔木何许兮，山高水长 山高水长：像山一样高耸，如水一般长流。原比喻人的风范或声誉像高山一样永远存在。后比喻恩德深厚。近义词：万古流芳。 如此厚赠、实深惶悚、但来从远道、却之不恭、因即拜领。 心猿不定，意马四驰。 信而有征：君子之言、信而有征。 战战兢兢、如临深渊、如履薄冰 旦为朝云、幕为行雨、朝朝暮暮、阳台之下。 丘也闻有国有家者，不患寡而患不均，不患贫而患不安。盖均无贫，和无寡，安无倾。夫如是，故远人不服，则修文德以来之。既来之，则安之。 偶作_百度汉语 作者：冯道 莫为危时便怆神，前程往往有期因。 须知海岳归明主，未必乾坤陷吉人。 道德几时曾去世，舟车何处不通津。 但教方寸无诸恶，狼虎丛中也立身。]]></content>
      <categories>
        <category>素养</category>
      </categories>
      <tags>
        <tag>素养</tag>
        <tag>古诗文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[素养-句子]]></title>
    <url>%2F2019%2F01%2F22%2F%E7%B4%A0%E5%85%BB-%E5%8F%A5%E5%AD%90%2F</url>
    <content type="text"><![CDATA[择天记无论是人性还是人心，都是不能考验的，因为当你想办法去考验它的时候，说明你已经开始怀疑了。而怀疑是一切不幸的根源。不再会因为他人的嘲笑或是无视而自卑。对于不喝酒的人来说，喝酒的唯一理由就是与他一起喝酒的人是谁。既然胜负未分，何必提前羞愧。所谓强者，就是让家人朋友感到放心和安全。不是所有的事情，都那么容易被忘记。古时候的好习惯都已经被遗忘了，说过一遍的话偏偏有人不愿意记住。 三国无敌温侯狂戟飞，子龙枪神人更美；古之恶来称典韦，关公武圣高地位。西凉马超沙场威，盖世猛将推张飞；强悍孙策霸王气，许褚虎痴怕过谁？太史力掀江东水，甘宁原为锦帆贼；黄忠老将出神箭，张辽惊得敌胆碎。大智神勇赞姜维，庞德抬棺死不畏； 天行九歌陌上人如玉，公子世无双。紫衣华服，公子远行。可是你看，不论是温文儒雅的张良，纵横捭阖的卫庄，还是你曾经最疼爱的红莲，他们每个人身上，都活出了你的影子。天行九歌，流沙聚散，这世界，是你的江山。借君三尺剑，烽火城头沥肝胆，借君三十年，繁华万里好江山。卫庄一身夜行衣提剑喋血，韩非紫衣翩然灼灼其华，白亦非血衣白发妖冶无双。刀光剑影血色弥漫，阴谋诡谲泪洒流年。追随那个人，和他一起去经历，失败！ 浅浅的一层溪水流逝了，但永恒留在了原处。 将夜你长得很美，所以就不要想得太美了。心意不是行李，因为没有重量，所以才难提起，更难放下。如果罗密欧不是贵族的儿子而是个掏粪工，那么朱丽叶为他去死的时候心理挣扎会激烈的多。如果只剩下最后的方法，那必然是最好的方法。对于暂时无法理解的事物，承认其存在而不用去理会。也许我的选择最终会被证明是错误的。但至少现在，我想这样选，那么我便这样选。等雨停的时候，雨往往不会停。等人来的时候，人往往不会来。 史铁生我放下书，想，这么大一座园子，要在其中找到她的儿子，母亲走过多少焦灼的路。多少年来我头一次意识到，这园中不单是处处都有过我的车辙，有过我车辙的地方也都有过母亲的脚印。鲁迅我又不愿意他们因为要一气，都如我的辛苦辗转而生活，也不愿意他们都如闰土的辛苦麻木而生活，也不愿意都如别人的辛苦恣睢而生活。他们应该有新的生活，为我们所未经历过得生活。 庆余年 这个世道很变态，你若不变态，怎么玩转过来。 重义者，并不见得能够将义字发挥；谋利者，去不见得是无义之徒。义者，大利也，只要目的正确，何必在乎手段。 秘密是最能让人好奇的，权利是最能让人兴奋的，力量是最能让人依赖的。但是好奇往往意味着危险，兴奋往往意味着迷失，依赖的结果往往是失败。 如果他试图一步步地试探我的底线，我不介意把底线摆的更向前一些。 这人啊，都是喜欢做自己最不擅长的事情，最喜欢做自己不行的事儿，按照心理学，你缺什么，下意识里就会强调什么。 吻君唇叶，齿有留香。 十八岁的天空 每个女人都应该有一只口红。 温柔是不是很容易被遗忘啊。 杜拉拉升职记 如果你不能给她一个美好的未来，那么，不要把她哄上床爱情公寓 当你把硬币抛向空中的那一刻，你突然就知道，你希望的结果是什么了。 每当我找到成功的钥匙时，有人就把锁给我换了。 原谅他是上帝的事，我要做的是把他送去见上帝。 论坛 高手不傲慢，只是对那些懒于动脑的人比较傲慢 。 外键在心里。老白与小黄 有时候你最需要的只是让别人付出他们应该付出的代价 父母只不过是有了孩子的孩子 世界上最费力不讨好的事情就是做父母了。 它对你来说有价值就足够了。 动物世界 生死已看淡，不服就是干。（蜜獾）WeChat 你吃过的苦，终有一天会笑着讲出来的。其它 深山藏虎豹、田野埋麒麟。 什么都没有说，只是努力、更努力、比所有的人还要努力。 我曾经厌倦自己身为女子，但现在确感到无比的庆幸。 你突然变聪明，太诡异了。猎国 穷山恶水出刁民 异世邪皇 而且他不想跟慕容忆发生太亲近的关系，本来自己就是想要把慕容忆从精神上到肉体上彻底征服，如果自己爱上了她，不能自拔，岂不可笑。 大凡天之所命尤物，不妖其身，必妖于人。 小人善猜，君子善断。 Remember , the goal is to not just to make the program work.The goal is to learn how to make the program work. I’m really ,really stuck. Superstitius beliefs and magical thinking.(迷幻的认识和魔幻的想法) Beauty is our Business。 歌词 我为你留着一盏灯，让你心境永远不会近黄昏 繁杂而不杂乱、魅惑而不媚俗、叛逆而不张扬努力 我忽然明白，我们都会成为前辈，毕业离开，但有些东西会永远的留在这所学校，在一届又一届年轻的身体里源远流长，生生不息。它们是面对世界的态度、精神和习惯。这一种传承深深扎根在大学这片土壤里，徐徐飘散在这方空气中，滋养着每一个路过的有心人。 名人 我不知道世上的人怎么评价我。我却这样认为：我好像是在海滨上玩耍的孩子，时而拾到几块洁净的石子，时而拾到几片美丽的贝壳并为之欢欣。那浩瀚的真理的海洋仍然展现在面前。八月长安 一厢情愿、就得愿赌服输。 让一个人变强大的最好的方式就是拥有一个想要保护的人。 喜怒形于色是需要资本的 不是所有的坚持都有结果，但总有一些坚持，能从一寸冰封的土地里，培育出十万朵怒放的蔷薇。 永远不要说永远。 两个陌生人坠入爱河，只有一个人知道这不是巧合。 当你放下戒备，真心第一个人好的额话，你就成了瞎子。 不管我超那个方向看，余光里慢慢都是你。 吹箫操琴却无声，此时无声胜有声。 喜悦骄傲失落微酸 凄风苦雨守孤坟 风起雨落夜将至 她蹙起眉头不喜时，我眼中的世界便不再光明。 但我知道自己下了多少功夫，吃了多少苦，我平时放弃了所有别人去追逐的一切享受，都用在了修行上，不就是为了在遇到了这些险阻时，可以应对的比别人更从容。 花径不曾缘客扫，蓬门今始为君开。]]></content>
      <categories>
        <category>素养</category>
      </categories>
      <tags>
        <tag>句子</tag>
        <tag>素养</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Language-Arabic1]]></title>
    <url>%2F2019%2F01%2F22%2FLanguage-Arabic1%2F</url>
    <content type="text"><![CDATA[阿拉伯拼音前半部分读音第一次课a batacazhei muhahedai lezai leruazai inxinshensa de 第二次课za dedazaai ine infoga fuka fulai mumi munu enha(短促)wa ouya 阿拉伯歌曲第一次课ai lei fengba ongta ongca onghei ongha onghe ~dai longzai longrua rongzai yongxin nongshen nongsa de ~ 第二次课sa ongza ongda ongzaai nonge nong 第三次课第四次课 你好。 A la sa mu A lei hong.(Hello) Wa A lei hong A la sa mu.(Hello) 你好吗. Kei fo En ta.(How are you) A na zhe i da.(I am fine thanks) 再见 Ma a se la mu.(see you) Ma a se la mu.(see you) 谢谢 Shu ke lang.(Thank you)第五次课 你好吗. Kei fo ha lou ke.(How are you) bi ha yi le.(I am fine thanks) wa en ta (ti).(and you)第六次课 ma the i si ma ku (你的名字是什么) i na i si mi number three(我的名字是number three) ma the ta men(你在干什么) a na a men watching(我再看电视) ki fo a rua bin(阿拉伯语怎么样) a rua bin zhe mi la (阿拉伯语很美) ma the a ma rua ke(你多大了) a na a ma rain 22(我22岁了)第七次课 欢迎来到哈尔滨 很高心见到你a na bi ha i le]]></content>
      <categories>
        <category>学习札记-Language</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>Arabic</tag>
        <tag>Language</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Language-English1]]></title>
    <url>%2F2019%2F01%2F22%2FLanguage-English1%2F</url>
    <content type="text"><![CDATA[How to Make a Good Presentation1. Greeting.首先需要向到场的老师、同学表示自己的问候。例：Good Afternoon everyone. 2. Compliment/Gratitude.向到场的同学、老师表示感谢，说一下恭维的话。 例：It’s my pleasure to speak here. Thank for Ms Chang to give me the chance to speak here. 3. self-introduction.自我介绍。I&apos;m xiejiaru study in Fault-tolerant and mobile computing lab. 4. topic/title(Important).介绍一下自己将要做的报告的主要内容。也就是 自己做这次报告的中心。 5. outline.给出自己的报告的提纲。 英语口语矫正要注意发音的嘴型，首先不要让速度太快，首先注重的是正确性。 原始资料 VOA英语慢速网http://www.voanews.cn/voase/46214.htm 颠覆常识 外国人如何回答“How are you”的时候是不会使用“I’m fine thanks and you”这样回答的。他们一般是回答”Good”或者是根据实际情况进行相应的回答，比如”I’m tired”并且他们如果要是问你的话，他们会说“and how are you “同样是不会问”and you “的。这一点需要特别的注意。 在国外不使用WC。在英国使用toilet，在美国使用washroom、restroom、lady’s room 外国人如何表示放松减轻压力：chill out、relax and unmind、女士经常使用：Let my hair down、Let off steam（放气）、steam bread（馒头） 英语单词relationship如果是以复数形式出现relationships代表的是婚恋关系。如果是以单数形式出现代表的是普通的关系。这个就像friendship似的，这个单词从来都没有出现过复数。]]></content>
      <categories>
        <category>学习札记-Language</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>Language</tag>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IDE-杂]]></title>
    <url>%2F2019%2F01%2F22%2FIDE-%E6%9D%82%2F</url>
    <content type="text"><![CDATA[Format code inVS 如何删除NetBeans 手动把C:\Users\用户名\AppData\Roaming\Netbeans\。这个目录下的NetBeans文件夹删掉。 使用Xshell连接CentOS(Linux)服务器 在百度上现在并安装xshell5。 新建会话，直接填写IP地址，然后点击连接即可。 点击屏幕上的最大最小化按钮可以全屏就像mstsc一样。]]></content>
      <categories>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>IDE</tag>
        <tag>杂</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub-已有公开仓库变私有]]></title>
    <url>%2F2019%2F01%2F08%2FGitHub-%E5%B7%B2%E6%9C%89%E5%85%AC%E5%BC%80%E4%BB%93%E5%BA%93%E5%8F%98%E7%A7%81%E6%9C%89%2F</url>
    <content type="text"><![CDATA[问题描述今天Github个人私有仓库免费使用，如何将已公开的仓库变为私有？ 问题解决]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>已有公开仓库变私有</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Language-French1]]></title>
    <url>%2F2018%2F12%2F31%2FLanguage-French1%2F</url>
    <content type="text"><![CDATA[26个字母发音 字母发音 26个字母大小写法 字母写法 词典 法语助手 网课 胖达法语 教材 课堂听力、课件 《零起点法语一学就上手》 积累总结 开音节就是以元音结尾的音节；闭音节就是以辅音结尾的音节。 词末开音节就是指这个音节处于词末，词首开音节就是指这个音节处于词首。 如果只有一个音，既可以叫词末开/闭音节，也可以叫词首开/闭音节或者重读开/闭音节。 以 …音节 结尾不是开拼写是看音标。 法语的本质不在于音标，读的差不多就行，主要是各种变位和后期学的各种语法。 单音节：法语单词由音节构成,音节中的主体因素是元音,一般说,一个单词有几个元音,也就有几个音节,所以单音节词自然只有一个元音。]]></content>
      <categories>
        <category>学习札记-Language</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>Language</tag>
        <tag>French</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS-YUM-Update]]></title>
    <url>%2F2018%2F12%2F30%2FCentOS-YUM-Update%2F</url>
    <content type="text"><![CDATA[问题描述 安装的是CentOS-7.15 gnome, 在使用yum update 重启电脑后gnome 崩溃如图2，搜索一通后发现是内核有问题，按照一些方法改正后更新了内核，进入后启动图形界面失败如图3，使用 startx 失败如图4，尝试yum groupinstall GNOME Desktop 与 “KDE Plasma Workspaces”后仍然失败. 解决方法 直接禁用yum update]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>Yum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[POWER_积累学习_THIRD]]></title>
    <url>%2F2018%2F12%2F29%2FPOWER-%E7%A7%AF%E7%B4%AF%E5%AD%A6%E4%B9%A0-THIRD%2F</url>
    <content type="text"><![CDATA[计算机 VPN-Virtual PrivateNetwork-虚拟专用网络。 利用公用网络架设专用网络。例如某公司员工出差到外地，他想访问企业内网的服务器资源，这种访问就属于远程访问。 在内网中架设一台VPN服务器。外地员工在当地连上互联网后，通过互联网连接VPN服务器，然后通过VPN服务器进入企业内网。为了保证数据安全，VPN服务器和客户机之间的通讯数据都进行了加密处理。有了数据加密，就可以认为数据是在一条专用的数据链路上进行安全传输，就如同专门架设了一个专用网络一样，但实际上VPN使用的是互联网上的公用链路，因此VPN称为虚拟专用网络，其实质上就是利用加密技术在公网上封装出一个数据通讯隧道。 有了VPN技术，用户无论是在外地出差还是在家中办公，只要能上互联网就能利用VPN访问内网资源，这就是VPN在企业中应用得如此广泛的原因。 VPN百度百科 网卡灯的含义 各网卡、各交换机等网络设备都不一样，一般来讲：绿灯分为亮或不亮(代表网络速度)，黄灯分为闪烁或不闪烁(代表是否有数据收发) 绿灯：长亮 代表100M; 不亮 代表10M 黄灯：长亮 代表无数据收发; 闪烁 代表有数据收发 也有些千兆网卡的灯以颜色区分，不亮代表10M / 绿色代表100M / 黄色代表1000M，现在10M的网络基本看不到了，如果一个灯长亮，基本可以说明100M网络或更高，而另一个灯时而闪烁，那代表有数据收发，具体要看具体网络设备。 IBM-SYSTEM/360 是在1964年4月7日，推出的划时代的大型电脑，这一系列是世界上首个指令可兼容计算机。 40多年前，System/360推出后，掀起金融信息化的热潮；而最重视安全与可靠的金融机构，考虑客户数据、软件和应用程序兼容等因素，也都一直选择兼容性和可靠性最高的IBM大型主机。配合庆祝System/360的40周年(2004年)，IBM亦宣布同步推出最新的中阶大型主机z890。 体系结构 1964年，G.Amdahl首次提出体系结构这个概念。 SSE指令 Endian Cache一致性 计算机单位 TPS(TransactionPerSecond) 每秒事务处理量 ILP (Instruction-level-parallelism) 指令级并行 Benchmark 测试 FTDI 英商飞特帝亚有限公司(FTDI)是设计和供应USB芯片和软件方案的专业厂商。FTDI将易于实现的IC设备和经过千锤百炼的免费USB固件和软件驱动组合起来，提供了实现USB的快捷方式。公司的USB单信道和多信道接口可外设成具有易于使用特性的的UART或FIFO界面。这些现行的设备可用于传统USB至RS232/RS422转换器应用， 也可用于MCU，PLD或FPGA至USB的快速界面。有非常多的评估工具软件和模块可用来设计评估FTDI的芯片。 SOP Sense On Power BootLoader Boot Loader 是在操作系统内核运行之前运行的一段小程序。通过这段小程序，我们可以初始化硬件设备、建立内存空间的映射图，从而将系统的软硬件环境带到一个合适的状态，以便为最终调用操作系统内核准备好正确的环境。通常，Boot Loader是严重地依赖于硬件而实现的，特别是在嵌入式世界。因此，在嵌入式世界里建立一个通用的 Boot Loader 几乎是不可能的。尽管如此，我们仍然可以对 Boot Loader 归纳出一些通用的概念来，以指导用户特定的 Boot Loader 设计与实现。 视距和非视距 非视距(no line of sight)最直接的解释就是，通信的两点视线受阻，彼此看不到对方。 RSVP 资源预留协议（RSVP:Resource Reservation Protocol）最初是IETF为QoS的综合服务模型定义的一个信令协议，用于在流（flow）所经路径上为该流进行资源预留，从而满足该流的QoS要求。资源预留的过程从应用程序流的源节点发送Path消息开始，该消息会沿着流所经路径传到流的目的节点，并沿途建立路径状态；目的节点收到该Path消息后，会向源节点回送Resv消息，沿途建立预留状态，如果源节点成功收到预期的Resv消息，则认为在整条路径上资源预留成功。 rsvp(资源预留协议)是一个在ip上承载的信令协议，它允许路由器网络任何一端上终端系统或主机在彼此之间建立保留带宽路径，为网络上的数据传输预定和保证qos。它对于需要保证带宽和时延的业务，如语音传输，视频会议等具有十分重要的作用。 接到邀请（无论是请柬或邀请信）后，能否出席要尽早答复对方，以便主人安排。一般来说，对注有R.S.V.P.（请答复）字样的，无论出席与否，均应迅速答复。注有“Regrets only”（不能出席请复）字样的，则不能出席时才回复，但也应及时回复。经口头约妥再发来的请柬，上面一般都注有“To remind”（备忘）字样，只起提醒作用，可不必答复。答复对方，可打电话或复以便函。 QoS QoS（Quality of Service，服务质量）指一个网络能够利用各种基础技术，为指定的网络通信提供更好的服务能力, 是网络的一种安全机制， 是用来解决网络延迟和阻塞等问题的一种技术。 LWIP (Light Weight (轻型)IP) lwip是瑞典计算机科学院(SICS)的Adam Dunkels 开发的一个小型的TCP/IP协议栈。实现的重点是在保持TCP协议主要功能的基础上减少对RAM的占用。 LWIP有无操作系统的支持都能够运行。 它只需要几十K的RAM和40K左右的ROM就可以运行了。这使得LWIP协议适合在低端的嵌入式系统中使用。 H5 H5本应是一个技术集合，却别一会成了一个技术。 INFOCOM INFOCOM是IEEE组织在通信网络领域的旗舰性会议。 DOI DOI (Digital Object Identifier)——数字对象标识符，是一种对包括互联网信息在内的数字信息进行标识的工具。DOI 的结构式：./ ，分为前缀和后缀两部分中间用一斜杠分开，前缀中又以小圆点分为两部分。 相当于一个链接，你只要有这个doi，点开就可以搜到这篇文章，如果有权限，就可以直接下载了，文章的全部信息也都可以看到。DOI可以用来揭示有关该数字对象的一些信息。例如：DOI 10.3724/SP.J.1206.2009.00382中，“10.3724”代表中国科学出版集团，“SP.J.”表示科学出版社期刊，“1206”为《生物化学与生物物理进展》期刊的DOI代号，“2009.00382“为该文章的代码。 极客 是英文geek的音译。对电脑痴迷的人。 软件工程相关术语 SRS：需求分析文档； HLD：概要设计文档； LLD：详细设计文档； BD：基本设计; DD：详细设计; FD：结构设计; CTF(Capture The Flag) 中文一般译作夺旗赛，在网络安全领域中指的是网络安全技术人员之间进行技术竞技的一种比赛形式。 生活 公积金 通常指住房公积金 住房公积金是指国家机关、××企业、事业单位、民办非企业单位、社会团体及其在职职工缴存的长期住房储金。 好处 还款时间短 还款利率低 视情况能够被使用 公积金的好处 谷歌浏览器安装了广告终结者之后，爱奇艺无法播放视频？ 将广告终结者更新一下就行了。（要等一段时间） 戒指戴不同手指传达的个人信息 大拇指：大拇指一般是不戴戒指的，但如果戴在拇指上则表示追（有行动的对对方的追求）。戒指一般应戴在左手上，这种习俗为世界各国所接受。 食 指：左手－未婚（已有恋人，打算结婚）右手－单身（还未恋爱 中 指：左手－订婚（名花有主，已经订婚）右手－恋爱（心有所属） 无名指：左手－新婚（结束恋爱），右手－热恋（未考虑结婚与否） 小手指：左手－不婚（可恋爱），右手－单身主义者（不恋爱） 左右手戒指的戴法及含义、 WSK 全国外语水平考试（WSK）是国家教育委员会举办的外语水平考试。 考试成绩满分为160分，出国合格线为110分，其中听力成绩必须达到24分。成绩合格者可申请办理“全国外语水平考试合格证”并可申请公费出国进修。 英语考“写作、听力、语法结构和词汇、完形填空、阅读理解”五个部分。 每年考试三次。第一次考试定于3月的第四个星期六，考英语(PET)、日语(NNS)和俄语(ТПРЯ)；第二次考试定于7月的第一个星期六,考法语(TNF)和德语(NTD),口试于次日举行； 第三次考试定于9月的第三个星期六，考英语(PET)。 报名日期: 第一次考试报名时间为每年的1月第一个星期一开始持续十天；第二次考试报名时间为5月第一个星期一开始持续至十天；第三次考试报名时间为7月的第一个星期一开始持续至十天。考点可根据当地情况提前报名。考生可以函报，但必须提前20天与考点联系。 成绩报告单一般在考试后六周左右, 由各考点转发给有关单位或个人。 非洲鼓 通常指的是来自西非的Djembe（金贝鼓，坚贝鼓），是西非曼丁文化的代表性乐器。 甩琴 据说只能在日本买到。 声音特别好听，非常适合哄小孩。 新四大发明：高铁、支付宝、共享单车和网购。 中国文化 农历十二个月的别名 一月：孟春、正月、端月、元春、隅月、始春、孟月、寅月 二月：仲春、杏月、花月、如月、早春、卯月 三月：季春、桃月、桐月、炳月、三春、阳春、暮春、辰月 四月：孟夏、阴月、梅月、余月、清和月、巳月 五月：仲夏、榴月、毒月、蒲月、午月 六月：季夏、荷月、荔月、目月、伏月、未月 七月：孟秋、兰月、巧月、瓜月、相月、霜月、桐月、申月 八月：仲秋、桂月、壮月、中秋月、酉月 九月：季秋、菊月、玄月、戌月 十月：孟冬、良月、阳月、小阳春、亥月 十一：仲冬、冬月、葭月、辜月、子月 十二：季冬、腊月、涂月、嘉平月、丑月 其中值得一提的是《A Midsummer Night’s Dream》，翻译的人的水平真的很高，翻译过来就是《仲夏夜之梦》必须与必需的区别 “必需”与“必须”，音同而形、意不同，使用时常常混淆，实有辨别的必要。 从词意看，“必需”是“一定得有”，不可缺少的。如：衣、食、住是人们生活所必需；煤铁等是发展工业所必需的原料。“必须”是表示事理上和情理上的必要，“一定得要”，如：“学习必须刻苦钻研”。还可用于加强命令语气，如：“明天你必须来。” 从词性看，“必需”是动词，在句子中主要与别的词结合做定语；“必须”是助动词，在句子中只做状语，如：决定了的事就必须做到。另外，“必需”可与其他词合为一个新的词，如“必需品”；“必须”则没有这种构词能力。溺水抢救 清理异物。 首先倒水，抢救者半跪，将溺水者放在自己的膝盖上，进行倒水此时需要注意舌头。 用双手击打双肩。 1001 - 1007 ，此时用手测量溺水者的脖颈。 按压位置为两乳头连线的中点。30次一组。 进行人工呼吸，两次一组。 OFFICE Word中能够修改文档的保护格式，限制其它人的更改。 成绩等级用英语表达 excellent (90-100) good (80-89) average (70-79) pass (60-69) fail (0-59) exemption(免修) 历史名人黄宗霑 1899年8月28日－1976年7月12日），美籍华人，生于大清广东省新宁县永安村，1904移民美国，1976年因癌症逝于美国加州好莱坞。曾获得10次奥斯卡金像奖提名，电影《玫瑰梦》(1956)和《赫德》(1964年)两次获得奥斯卡金像奖最佳摄影。他毕生拍摄了130多部电影，被国际电影摄影师协会（International Cinematographers Guild）会员投票评选为电影史上最具影响力的十大电影摄影师之一。 时间影像杨步伟 赵元任 赵元任（1892.11.3—1982.2.24）， 汉族，字宣仲 [1] ，又字宜重 [2] ，原籍江苏武进（今常州）。清朝著名诗人赵翼（瓯北）后人 [3] 。光绪十八年（1892年）生于天津。现代著名学者、语言学家、音乐家。 [4-5] 赵元任先后任教于美国康乃尔大学、哈佛大学、中国清华大学、中央研究院史语所、美国夏威夷大学、耶鲁大学、哈佛大学、密歇根大学，后长期（1947-1963年）任教于加州大学伯克利分校（UC Berkeley）并在伯克利退休 [6-7] 。赵元任先后获美国普林斯顿大学（1946年）、加州大学（1962年）、俄亥俄州立大学（1970年）荣誉博士学位，加州大学“教授研究讲师”（Faculty Research Lecturer，1967年），中国北京大学荣誉教授（1981年）。 [4] 赵元任是中国现代语言学先驱，被誉为“中国现代语言学之父”，同时也是中国现代音乐学之先驱，“中国科学社”的创始人之一。 [8] 赵元任在语言学方面的代表作有：《现代吴语的研究》《中国话的文法》《国语留声片课本》等 [4] 。赵元任在音乐方面的代表作有：《教我如何不想她》《海韵》《厦门大学校歌》等 [9-10] 。赵元任翻译的代表作有《爱丽丝梦游仙境》等。]]></content>
      <categories>
        <category>学习札记-POWER</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>POWER</tag>
        <tag>积累学习_FIRST</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[POWER_积累学习_TWO]]></title>
    <url>%2F2018%2F12%2F29%2FPOWER-%E7%A7%AF%E7%B4%AF%E5%AD%A6%E4%B9%A0-TWO%2F</url>
    <content type="text"><![CDATA[数学 P.D.F(Probability Desity of Function)概率密度函数。 r.v(Random Variable)随机变量 等号上面加三角形或等号上加 def 表示那是一个定义式三条线等号表示恒等式等号上加点 表示后面的数值是近似值等号上面的直线改为波浪线 表示后面的表达式是(泰勒)近似式 复数的共轭，是对虚部变号的运算。即若Z=A+iB.则Z的共轭是A-iB. 盛金公式用于求解一元三次方程组。 历史+文化 北京、西安、南京、洛阳并称为中国四大古都。北京：古称：燕京，因为古代曾是燕国的都城。又称大都、北平顺天。南京：古称：金陵、健康、天京、应天。 祚：福、赐福；皇位；年；靖：表示平安、使安定，现指恭敬、细小、和善、安静。 东汉和西汉：因为都城的不同。刘邦建立汉朝定都长安，史称东汉。刘秀建立汉朝定都洛阳史称西汉。 醪糟 [láo zāo] 。西安人经常喝这个东西。醪糟是一种米酒，又叫酒酿，甜酒，酸酒，旧时叫“醴”，江南地区特色传统小吃。醪糟经糯米（又称江米）发酵而成，可以帮助消化，夏天可以解暑。醪糟的主要原料是糯米，酿制工艺简单，口味香甜醇美，乙醇含量极少，因此深受人们喜爱。但是仍然有很多人认为它是酸的，拒绝食用。在一些菜肴的制作上，糯米酒还常被作为重要的调味料。 八百里秦川。又称陕西关中平原，指的是秦岭北麓渭河冲积平原,的一个地点。因此又称渭河平原，它南倚秦岭，北界北山，西起宝鸡峡，东至潼关，东西长约360公里，约占全省土地总面积的19%。自古以来，这里风调雨顺，土地肥沃，农业发达，为秦国文明的兴起奠定了强大基础，所以号称“八百里秦川”。是中华文明的发祥地。 客家米酒。客家米酒是一种汉族传统的米酒。客家人的酿酒业历史悠久，如梅县区和梅江区的客家娘酒、赣州的麦饭石、龙南的酿米酒、龙岩的陈缸烧。米酒在客家又被成为水酒。唐代张九龄这样形容米酒：“玉碗才倾黄玉剖”。（ps:红泥乍擘绿蚁浮，玉碗才倾黄玉剖） 二十 廿niàn 三十 卅 sà 四十 卌xì 五十 圩wéi 六十 圆 yuán 七十 进 jìn 八十 枯 kū 中国四大书院 应天书院(位于河南省商丘市睢阳区商丘古城南湖畔) 岳麓书院(位于湖南省长沙市湘江西岸的岳麓山脚下) 白鹿洞书院(位于江西省庐山五老峰南麓) 嵩阳书院(位于河南省登封市嵩山南麓) 石鼓书院(位于湖南省衡阳市石鼓区石鼓山上) 世界各国 南丁格尔1854年至1856年间，英法联军与沙俄发生激战。在英国一家医院任护士主任的南丁格尔，带领38名护士奔走前线，参加护理伤病员的工作。因当时医疗管理混乱，护理质量很差，伤病员死亡率高达42%。在这种情况下，南丁格尔下定决心潜心改善病室的卫生条件，并加强对病人的护理和营养。半年之后，医院的伤病员死亡率下降到了2.2%。这一事迹传遍全欧。1860年，她在英国伦敦创办了世界上第一所正规护士学校。她的护士工作专著，成了医院管理、护士教育的基础教材。鉴于南丁格尔推动了世界各地护理工作和护士教育的发展，因此被誉为“近代护理创始人”。南丁格尔1910年在睡梦中逝世后，国际护士理事会把她的生日5月12日定为“国际护士节”。1912年，国际护士理事会将南丁格尔的诞生日–5月12日定为国际护士节，旨在激励广大护士继承和发扬护理事业的光荣传统，以“爱心、耐心、细心、责任心”对待每一位病人、做好护理工作。最初称“医院日”，也称“南丁格尔日”，在中国称为“国际护士节”。在这天里，大力宣传护理工作，鼓励护士们学习救死扶伤的人道主义精神，已经成为世界各国护理界的一件盛事。 韩国所在纬度与山东相同。釜山是韩国的一个城市。韩国属于温带季风气候。韩国四季分明，春、秋两季较短；夏季炎热、潮湿；冬季寒冷、干燥，时而下雪。韩国各地区之间温差较大，平均温度为6℃至16℃。在全年最热的8月份，平均温度为19℃至27℃。而在全年最冷的1月份，平均温度则在零下7℃至8℃。总体来看比山东好点。 美国国家航空航天局（英语：National Aeronautics and Space Administration，简称NASA），又称美国宇航局、美国太空总署，是美国联邦政府的一个行政性科研机构，负责制定、实施美国的太空计划，并开展航空科学暨太空科学的研究。 政治 事业编制是指为国家创造或改善生产条件、增进社会福利，满足人民文化、教育、卫生等需要，其经费一般由国家事业费开支的单位所使用的人员编制。 公务员：指依法履行公职，纳入行政编制、事业编制、警察编制，由国家负担工资、福利的工作人员。 科研 SCI：美国《科学引文索引》（Science Citation Index, 简称 SCI ）于1957 年由美国科学信息研究所（Institute for Scientific Information, 简称 ISI）在美国费城创办，是由美国科学信息研究所（ISI）1961 年创办出版的引文数据库。SCI（科学引文索引）、EI（工程索引）、ISTP（科技会议录索引）是世界著名的三大科技文献检索系统，是国际公认的进行科学统计与科学评价的主要检索工具，其中以 SCI 最为重要。 SSCI：社会科学引文索引（Social Sciences Citation Index，简称SSCI）.为SCI的姊妹篇，亦由美国科学信息研究所创建，是可以用来对不同国家和地区的社会科学论文的数量进行统计分析的大型检索工具。 CSSCI：中文社会科学引文索引英文全称为“Chinese Social Sciences Citation Index”，缩写为CSSCI。用来检索中文社会科学领域的论文收录和文献被引用情况。“中文社会科学引文索引”（CSSCI）由南京大学中国社会科学研究评价中心开发研制而成，是国家、教育部重点课题攻关项目。CSSCI数据库已被北京大学、清华大学、中国人民大学、复旦大学、国家图书馆、中科院等100多个单位包库使用，并作为地区、机构、学术、学科、项目及成果评价与评审的重要依据。http://www.360doc.com/content/15/0130/10/241244_444924001.shtml 原始资料 六维空间于08年9月7日成立，取IPv6中“v6”的谐音，代表新的协议和下载体验，也寓意论坛包容各方优秀资源。目前论坛的各种资源，尤其是高清资源不断丰富，人气不断提升。 在线API文档，还有demo 先贤的智慧 “惟楚有材，于斯为盛”。楚国真是出人才的地方啊，这里（指岳麓书院）更是英才齐聚之会所。楚国真是出人才的地方啊，这里（指岳麓书院）更是英才齐聚之会所。 子曰：质胜文则野、文胜质则史。文质彬彬，然后君子。质胜文则野：质，朴，质朴。文，文采，文饰。野，鄙野。 史： 本指宗庙之祝史，或在官府之掌文书者，这些人往往显得虚伪正经，故史意指虚浮，虚伪。彬彬：这里指文和质均匀配合的样子。孔子说：“质朴胜过文采，就显得粗野，文采胜过质朴，就显得虚浮。文采和质朴兼备，然后才 能成为 君子。” 孔子在这则语录里提出了“文质彬彬”的说法，这为后人普遍接受，文采和质朴恰当配合是后来文论家们对诗文写作的要求。 君子之泽，五世而斩。一个品行高尚、能力出众的君子，辛辛苦苦成就了事业。留给后代的恩惠福禄，经过几代人就消耗殆尽了。 穷兵黩武：穷：竭尽；黩：随便，任意。竭尽所有的兵力，任意发动战争。 近取诸身、远取诸物：它的含义是东自己的身体以及周围环境发生的异常变化来取象，用以进行或大或小的形式判断和结果预测。 多少事，从来急;天地转，光阴迫.一万年太久，只争朝夕。意思：天下的事情，从来都是那样急切；日月轮回，光阴紧迫。要等一万年后才等来胜利，实在是太久，我们要抓紧时间，力求主动，只争朝夕。 《世说新语-贤媛》”见李在窗梳头，姿貌端丽，徐徐结发，敛手向主，神色闲正，辞甚凄婉。”我见犹怜。 我见犹怜：我见到了都很喜欢。形容女子容貌美丽动人。 天若有情天亦老”：老天如果有感情、有喜怒哀乐那么他也会老！李贺用这句表达了他对他所处时代的无奈及悲天悯人的情感。“人间正道是沧桑”：人间，人类社会，人类历史！正道，正确的、正常的发展规律法则！沧桑，沧海桑田也！ 没有第二名；在国外是一个人VS一个人；在国内是一代人VS一代人；《启示录》这个电影可以看。周易 《周易》中，六为阴，九为阳。 乾为天、坤为地、震为雷、巽为风、坎为水、离为火、艮为山、兑为泽 天行健，君子以自强不息”（乾卦）、“地势坤，君子以厚德载物”（坤卦）、“随风巽，君子以申命行事”（巽卦）、“洊雷震，君子以恐惧修省”（震卦）、“水洊至，习坎；君子以常德行，习教事”（坎卦）、“明两作，离；大人以继明照于四方”（离卦）、“丽泽，兑；君子以朋友讲习”（兑卦）、“兼山，艮；君子以思不出其位”（艮卦） 名词AE： After Effects。后期特效。 生活 钢笔笔尖分明尖和暗尖。 解酒九法： 酒后头痛：蜂蜜水 酒后头昏：西红柿汁 酒后反胃、恶心：新鲜葡萄 酒后全身发热：西瓜汁 酒后口气：柚子 酒后肠胃不适，颜面发红：芹菜汁 酒后烦躁：酸奶 酒后心悸.胸闷：香蕉 酒后厌食：橄榄 库达犬（Bully Kutta），属工作犬。身材高大，肌肉发达，骨骼伟岸，脂肪少，皮肤松弛多皱纹，性格自信而沉稳，表象懒惰少动，不易为外物所干扰，且不易驯服，建议多训练。 茶壶网址 关公大刀青龙偃月刀 ，又叫做 冷艳锯 CV(Curriculum Vitae)是个人简历(履历)的简称。和resume相比较，CV通常更加的详细（一般都要两页纸或以上），涵盖更加全面也比resume更为严格。一般用于申请工作、学术、教育、科研职位或奖学金等时需要。CV的长度由其内容确定，有时可长达十页，年轻专业人的履历一般长度都在2—4页，而老资历的通常也在6—8页。 A站以游戏为特色，人群比较喜欢高谈阔论，话题比较大；B站以二次元动漫为特色，人群比较呆萌，话题宅基腐 （华美绝伦的）芍药，有个别名叫做：将离。中国古代男女交往，往往以芍药相赠表达惜别之情，送芍药就意味着即将分离。 芍药种植]]></content>
      <categories>
        <category>学习札记-POWER</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>积累学习_TWO</tag>
        <tag>POWER</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[POWER_积累学习_FIRST]]></title>
    <url>%2F2018%2F12%2F29%2FPOWER-%E7%A7%AF%E7%B4%AF%E5%AD%A6%E4%B9%A0-FIRST%2F</url>
    <content type="text"><![CDATA[计算机 AMD（Advanced Micro Devices)超威半导体公司.专门为计算机、通信和消费电子行业设计和制造各种创新的微处理器（CPU、GPU、APU、主板芯片组、电视卡芯片等)，以及提供闪存和低功率处理器解决方案，公司成立于1969年。 P、NP、NPC、NPH P类问题：所有可以在多项式时间内求解的问题构成P类问题。 NP类问题：该问题能否在多项式时间内求解是未知的，但确定的是能够在多项式时间内进行验证。由于不知道能否在多项式时间内对其进行求解，所以不知道NP是否等于P问题。 NPC问题：NP中的某些问题的复杂性与整个类的复杂性相关联.这些问题中任何一个如果存在多项式时间的算法,那么所有NP问题都是多项式时间可解的.这些问题被称为NP-完全问题(NPC问题)。通俗讲就是将多个NP问题归于到一个问题A，如果问题A有多项式解那么这一类问题都是有解的。但是因为问题A具有这一类问题的公共特性那么其必定是复杂的，所以有多项式解的可能性很小。但是也没有进行具体理论证明。 NP-hard：问题通俗来说是其解的正确性能够被“很容易检查”的问题，这里“很容易检查”指的是存在一个多项式检查算法。相应的，若NP中所有问题到某一个问题是图灵可归约的，则该问题为NP困难问题。 多项式时间（Polynomial time）在计算复杂度理论中，指的是一个问题的计算时间m(n)不大于问题大小n的多项式倍数。任何抽象机器都拥有一复杂度类，此类包括可于此机器以多项式时间求解的问题。数学描述为：m(n)= o(n^k)，此k为一常数值（依问题而定）。 判定问题：判断是否有一种能够解决某一类问题的能行算法。 非确定性算法：非确定性算法将问题分解成猜测和验证两个阶段。算法的猜测阶段是非确定性的，算法的验证阶段是确定性的，它验证猜测阶段给出解的正确性。设算法A是解一个判定问题Q的非确定性算法，如果A的验证阶段能在多项式时间内完成，则称A是一个多项式时间非确定性算法。有些计算问题是确定性的，例如加减乘除，只要按照公式推导，按部就班一步步来，就可以得到结果。但是，有些问题是无法按部就班直接地计算出来。比如，找大质数的问题。有没有一个公式能推出下一个质数是多少呢？这种问题的答案，是无法直接计算得到的，只能通过间接的“猜算”来得到结果。这也就是非确定性问题。而这些问题的通常有个算法，它不能直接告诉你答案是什么，但可以告诉你，某个可能的结果是正确的答案还是错误的。这个可以告诉你“猜算”的答案正确与否的算法，假如可以在多项式（polynomial）时间内算出来，就叫做多项式非确定性问题。 在一个周六的晚上，你参加了一个盛大的晚会。由于感到局促不安，你想知道这一大厅中是否有你已经认识的人。你的主人向你提议说，你一定认识那位正在甜点盘附近角落的女士罗丝。不费一秒钟，你就能向那里扫视，并且发现你的主人是正确的。然而，如果没有这样的暗示，你就必须环顾整个大厅，一个个地审视每一个人，看是否有你认识的人。 ASIC （Application Specific Integrated Circuit） 专用集成电路 FPGA（Field－Programmable Gate Array）即现场可编程门阵列，它是在PAL、GAL、CPLD等可编程器件的基础上进一步发展的产物。它是作为专用集成电路（ASIC）领域中的一种半定制电路而出现的，既解决了定制电路的不足，又克服了原有可编程器件门电路数有限的缺点。 CPLD(Complex Programmable Logic Device)复杂可编程逻辑器件，是从PAL和GAL器件发展出来的器件，相对而言规模大，结构复杂，属于大规模集成电路范围。是一种用户根据各自需要而自行构造逻辑功能的数字集成电路。其基本设计方法是借助集成开发软件平台，用原理图、硬件描述语言等方法，生成相应的目标文件，通过下载电缆（“在系统”编程）将代码传送到目标芯片中，实现设计的数字系统。 Xilinx是全球领先的可编程逻辑完整解决方案的供应商。Xilinx研发、制造并销售范围广泛的高级集成电路、软件设计工具以及作为预定义系统级功能的IP（Intellectual Property）核。 IP核：全称知识产权核（英语：intellectual property core），是指某一方提供的、形式为逻辑单元、芯片设计的可重用模块。IP核通常已经通过了设计验证，设计人员以IP核为基础进行设计，可以缩短设计所需的周期。[1]IP核可以通过协议由一方提供给另一方，或由一方独自占有。IP核的概念源于产品设计的专利证书和源代码的版权等。设计人员能够以IP核为基础进行专用集成电路或现场可编程逻辑门阵列的逻辑设计，以减少设计周期。 LUT :look up table 查找表。比较经典的课编程单元的配置是一个寄存器加一个查找表。 LVDS：Low-Voltage Differential Signaling 低电压差分信号这种技术的核心是采用极低的电压摆幅高速差动传输数据，可以实现点对点或一点对多点的连接，具有低功耗、低误码率、低串扰和低辐射等特点 SERDES是英文SERializer(串行器)/DESerializer(解串器)的简称。它是一种主流的时分多路复用(TDM)、点对点(P2P)的串行通信技术。即在发送端多路低速并行信号被转换成高速串行信号，经过传输媒体(光缆或铜线)，最后在接收端高速串行信号重新转换成低速并行信号。这种点对点的串行通信技术充分利用传输媒体的信道容量，减少所需的传输信道和器件引脚数目，提升信号的传输速度，从而大大降低通信成本。 MOS英文全称为Metal-Oxide-Semiconductor。 意思为金属-氧化物-半导体。MOS晶体管有P型MOS管和N型MOS管之分。由MOS管构成的集成电路称为MOS集成电路，由NMOS组成的电路就是NMOS集成电路，由PMOS管组成的电路就是PMOS集成电路，由NMOS和PMOS两种管子组成的互补MOS电路，即CMOS电路。MOS管的优点：1、电压控制；控制方式比较方便。2、体积小，重量轻，寿命长。3、输入电阻高，噪声低，热稳定性好，抗干扰能力强，功耗低。MOS管的缺点：1、熟悉的人比较少；（相比三极管而言）。2、对静电比较敏感，容易被静电击穿。 FPGA/CPLD中的LAB（logic array block)是什么意思？逻辑阵列块。 SPARC：RISC微处理器。Scalable Processor ARChitecture（可扩充处理器架构）。最突出的特点就是它的可扩展性。 集群计算：计算机集群将一组松散集成的计算机软件或硬件连接起来高度紧密地协作完成计算工作。 CPI: clockcycle pre instruction. 每条指令的时钟周期数。 ISA是IndustryStandardArchitecture的缩写.工业标准体系结构。 MIPS(Million Instructions Per Second).每秒处理的百万级的机器语言指令数。 容错：在系统存在故障的情况下，仍能正确地执行给定的算法。为了实现这一点，必须使系统具有故障检测与诊断、功能切换与系统重组(reconfiguration)、系统恢复与重新运行、系统的重构(reintegration)与可扩展等功能，而且这些功能不能影响系统的正常运行或至少不能使系统的性能下降到不能容忍的程度。移动计算：移动计算技术将使计算机或其它信息智能终端设备在无线环境下实现数据传输及资源共享。它的作用是将有用、准确、及时的信息提供给任何时间、任何地点的任何客户。这将极大地改变人们的生活方式和工作方式。 Blu-ray Disc. 蓝光光碟。简称BD。是DVD之后的下一代光盘格式之一，用于存储高品质的音响以及高容量的数据存储。蓝光光碟的命名是由于其采用波长405纳米（nm）的蓝色激光光束来进行读写操作（DVD采用650纳米波长的红光读写器，CD则是采用780纳米波长）。一个单层的蓝光光碟的容量为25或是27GB，足够录制一个长达4小时的高解析影片。 CoolerMaster (冷酷至尊)——Make it Yours.CoolerMaster成立的目标是提供业界最好的散热方案。散热器很不错。当然他的鼠标、键盘也是可以的。 HuntKey(航嘉)——用心传递正能量。自主设计、研发、制造开关电源、电脑机箱、显示器、适配器等IT周边产品，手机等移动电子产品充电器、旅行充等消费周边产品，智能插座、智能小家电、智能LED照明等智能家居产品，充电桩、新能源汽车车载电源(充电机、DC/DC等)。 GROUP-TEK(联泰兴)。专注网络变压器、通讯变压器、宽带接入器件、集成式RJ45连接器、电源变压器、功率电感、研发、生产、销售、服务。 Realtek（瑞昱半导体公司yu去声）图标是一个小螃蟹（RMC）。以螃蟹为企业的标章，是期许自己能效法螃蟹在自然界中以坚韧的生命力，无惧无畏，勇于挑战的象征意义。营业内容是设计、测试以及销售各类应用集成电路。 YCL ，生产网络变压器。 NVIDIA是（NVIDIA Corporation，NASDAQ：NVDA，官方中文名称英伟达）的简称，是一家以设计智核芯片组为主的无晶圆（Fabless）IC半导体公司.Nvidia 是全球图形技术和数字媒体处理器行业领导厂商. ATI(Array Technology Industry)（冶天）是世界著名的显示芯片生产商，和NVIDIA齐名。2006年被美国AMD公司以54亿美元的巨资收购后成为AMD的一部分。是一家专门设计与销售适用于个人电脑的显示卡、图形处理器、芯片组、机顶盒、数字电视、电子游戏机和手提式设备等的无厂半导体公司。 Corsair(海盗旗或者是海盗船).主营内存、鼠标、键盘。 英特尔是美国一家主要以研制CPU处理器的公司，是全球最大的个人计算机零件和CPU制造商. 北桥芯片又称为主桥芯片。主要负责联系CPU和控制内存以及显卡。提供对CPU类型，主频和其它各硬件设备的支持。因发热较大，所以上面装有散热片。 南桥芯片主要负责管理主板上的低速设备和外接设备。如PCI设备，USB设备，网络设备，硬盘，键盘，鼠标，音频，电源，BIOS芯片等。 TFT LCD：是薄膜晶体管液晶显示器英文thin film transistor-liquid crystal display字头的缩写。 tft-lcd技术是微电子技术与液晶显示器技术巧妙结合的一种技术。人们利用在si上进行微电子精细加工的技术，移植到在大面积玻璃上进行tft阵列的加工，再将该阵列基板与另一片带彩色滤色膜的基板，利用与业已成熟的lcd技术，形成一个液晶盒相结合，再经过后工序如偏光片贴覆等过程，最后形成液晶显示器。 ZigBee是一种近距离、低复杂度、低功耗、低速率、低成本的双向无线通讯技术。主要用于距离短、功耗低且传输速率不高的各种电子设备之间进行数据传输以及典型的有周期性数据、间歇性数据和低反应时间数据传输的应用。 埃克森美孚公司（Exxon Mobil Corporation），是世界最大的非政府石油天然气生产商，其严谨的投资方针以及致力于开发和运用行业领先技术及追求完善的运营管理，使之在全球位居行业领先地位。 Gartner魔力象限是监测和评估专业科技市场中公司的发展及定位的一种研究方法论和形象化工具。与单纯的给出统计数字或者列表为公司排名不同，魔力象限使用二维模型去阐释公司间的实力及差异。魔力象限基于公司发展前景的完备性和执行能力，将构成竞争的公司分成四个不同的部分。利基型企业、有远见者、挑战者、行业领袖。 台式机主板扫盲。http://www.pc841.com/article/20161025-74314_all.html PCI：是Peripheral Component Interconnect（外设部件互联标准）的缩写。PCI扩展插槽：是主板上用于固定扩展卡并将其连接到系统总线上的插槽，也叫扩展槽、扩充插槽。扩展槽是一种添加或增强电脑特性及功能的方法。http://mb.zol.com.cn/390/3901953_all.html 防呆接口：防呆接口是电脑组装上专用的术语。它一般是指由两排或几排电源供电口，在上面某个非对称位置的接口处没有设置接口，或者没有引脚，这样可以帮助DIY的朋友们更容易接电源线，用现在的说法就叫做防呆接口。 内存插槽中间有一个防呆口，这个防呆口具有保证内存安装方向正确和保证安装正确类型内存两个作用，所以在安装内存时绝对不可以使用蛮力。 杜邦线：电子行业杜邦线可用于实验板的引脚扩展，增加实验项目等。可以非常牢靠地和插针连接，无需焊接，可以快速进行电路试验。 SATA：是（Serial Advanced Technology Attachment，串行高级技术附件）是一种基于行业标准的串行硬件驱动器接口，是由Intel、IBM、Dell、APT、Maxtor和Seagate公司共同提出的硬盘接口规范。 PCI-Express(peripheral component interconnect express)：是一种高速串行计算机扩展总线标准，它原来的名称为“3GIO”，是由英特尔在2001年提出的，旨在替代旧的PCI，PCI-X和AGP总线标准。PCI-E属于高速串行点对点双通道高带宽传输，所连接的设备分配独享通道带宽，不共享总线带宽，主要支持主动电源管理，错误报告，端对端的可靠性传输，热插拔以及服务质量(QOS)等功能。PCIe交由PCI-SIG（PCI特殊兴趣组织）认证发布后才改名为“PCI-Express”，简称“PCI-E”。PCI-E的主要优势就是数据传输速率高，目前最高的16X 2.0版本可达到10GB/s，而且还有相当大的发展潜力。 芯片组（Chipset）:是构成主板电路的核心。一定意义上讲，它决定了主板的级别和档次。它就是”南桥”和”北桥”的统称，就是把以前复杂的电路和元件最大限度地集成在几颗芯片内的芯片组。芯片组是整个身体的神经，芯片组几乎决定了这块主板的功能，进而影响到整个电脑系统性能的发挥，芯片组是主板的灵魂。 Mini-ITX是一种结构紧凑的主板，它是设计用来支持用于小空间的、相对低成本的电脑的。 数字信号处理：Digital Signal Processing,缩写为DSP。将事物的运动变化转变为一串数字，并用计算的方法从中提取有用的信息，以满足我们实际应用的需求。大部分信号的初始形态是事物的运动变化，为了测量它们和处理它们，先要用传感器把它们的特征转换成电信号，等到这些电信号处理完后，再把它们转变为我们能看见、能听见或能利用的形态。数字信号处理前后需要一些辅助电路，它们和数字信号处理器构成一个系统。初始信号代表某种事物的运动变换，它经信号转换单元可变为电信号。例如声波，它经过麦克风后就变为电信号。 又如压力，它经压力传感器后变为电信号。 调频，全称“频率调制”。使载波的瞬时频率按照所需传递信号的变化规律而变化的调制方法。[1] 它是一种使受调波瞬时频率随调制信号而变的调制方法。 无线寻呼系统中的被叫用户接收机。它从基站发射的寻呼信号和干扰中选择出所需接收的有用信号，恢复成原来寻呼本机的基带信号，并产生音响（或振动）和显示数字（或字母、汉字）消息。 GSM 的技术核心是时分多址技术（TDMA），即将每个无线频率均匀地分给八个（或者十六个）手机用户，每个用户交互地占用八分之一的信道时间。（注：人们通话时，语音直接的间歇时间其实很长，只有语音编码做的合理，就可以几个用户共用一个信道。） APU(Accelerated Processing Unit)中文名字叫加速处理器，是AMD“融聚未来”理念的产品，它第一次将中央处理器和独显核心做在一个晶片上，它同时具有高性能处理器和最新独立显卡的处理性能，支持DX11游戏和最新应用的“加速运算”，大幅提升了电脑运行效率。 图形处理器（英语：Graphics Processing Unit，缩写：GPU），又称显示核心、视觉处理器、显示芯片，是一种专门在个人电脑、工作站、游戏机和一些移动设备（如平板电脑、智能手机等）上图像运算工作的微处理器。显卡的处理器称为图形处理器（GPU），它是显卡的“心脏”，与CPU类似，只不过GPU是专为执行复杂的数学和几何计算而设计的，这些计算是图形渲染所必需的。GPU的位置要看是集成显卡还是独立显卡。独立显卡的GPU在显卡上面，集成显卡的GPU就在CPU里面了。 内零头是指分配给作业的存储空间中未被利用的部分，外零头是指系统中无法利用的小存储块。 RTL级仿真:在大部分设计中执行的第一个仿真将是RTL行为级仿真。这个阶段的仿真可以用来检查代码中的语法错误以及代码行为的正确性，其中不包括延时信息。RTL，其实就是指你写的程序代码。所以RTL仿真，就是程序仿真的意思，一般指综合前的逻辑仿真，也就是不加入电路时延的仿真。 EDA是电子设计自动化（Electronics Design Automation）的缩写. CUDA(Compute Unified Device Architecture)，是显卡厂商NVIDIA推出的运算平台。 CUDA™是一种由NVIDIA推出的通用并行计算架构，该架构使GPU能够解决复杂的计算问题。 它包含了CUDA指令集架构（ISA）以及GPU内部的并行计算引擎。 开发人员现在可以使用C语言来为CUDA™架构编写程序，C语言是应用最广泛的一种高级编程语言。所编写出的程序于是就可以在支持CUDA™的处理器上以超高性能运行。CUDA3.0已经开始支持C++和FORTRAN。 COMBRICON（寒武纪）。寒武纪科技是全球智能芯片领域的先行者，宗旨是打造各类智能云服务器、智能终端以及智能机器人的核心处理器芯片。寒武纪，引领人类社会从信息时代卖相智能时代。世界上第一款深度学习处理器芯片的发明者。 FPGA可以设计嵌入式的东西，但是嵌入式的做不了FPGA的东西。FPGA相当于嵌入式的更加底下的一层，就是由门电路堆积起来的。FPGA可以自行设计如基于51内核的单片机，以及它的外围电路。FPGA更接近IC设计，而嵌入式是IC应用。难度上FPGA会更难，需求的知识也更多，特别是数电和模电。FPGA:即现场可编程门阵列，它是在PAL、GAL、CPLD等可编程器件的基础上进一步发展的产物。它是作为专用集成电路（ASIC）领域中的一种半定制电路而出现的，既解决了定制电路的不足，又克服了原有可编程器件门电路数有限的缺点。嵌入式系统（Embedded system），是一种“完全嵌入受控器件内部，为特定应用而设计的专用计算机系统”，根据英国电器工程师协会（U.K. Institution of Electrical Engineer）的定义，嵌入式系统为控制、监视或辅助设备、机器或用于工厂运作的设备。 所以这两个概念不是同一层次的。前一概念是指硬件实现，后者则是系统层面的东西了。 也许我可以重新定义下这个问题：FPGA和单片机有什么区别与联系？ 一。 先从体系结构来看。单片机（比如你说的stm32)的硬件架构已经决定了，用户通过编写指令控制单片机顺序执行任务。FPGA可以看做许多逻辑门，用户通过HDL将逻辑门组织成电路。所以从应用层次上来说，FPGA更接近硬件（个人定义，欢迎指正）。举个例子，要算一个4位加法，单片机上最多就一个ADD指令，具体怎么实现你是管不了的；在FPGA上你可以采用不同的电路来实现（并行OR串行），执行效率和资源占用都可以精确到门级。 二。从应用层面来看题主说“FPGA和嵌入式有什么区别与联系”这种问法本身是有问题的（先不说他们并不是并列关系），FPGA也可以作为嵌入式系统的计算核心。既然FPGA比单片机更接近硬件，那么如果我告诉你FPGA可以模拟出一个单片机你应该也不会觉得奇怪吧？这就是所谓的“软核”。COPY一段百度里面的：“前不久，Altera 正式推出了Nios II系列32位RISC嵌入式处理器。Nios II系列软核处理器是Altera的第二代FPGA嵌入式处理器，其性能超过200DMIPS，在Altera FPGA中实现仅需35美分。Altera的Stratix 、Stratix GX、 Stratix II和 Cyclone系列FPGA全面支持Nios II处理器，以后推出的FPGA器件也将支持Nios II。自Altera于2000年推出第一代16位Nios处理器以来，已经交付了13000多套Nios开发套件，Nios成为最流行的软核处理器。刚推出的Nios II系列采用全新的架构，比第一代Nios具有更高水平的效率和性能。和第一代相比，Nios II核平均占用不到50%的FPGA资源，而计算性能增长了1倍所以单片机能做的FPGA也能做，FPGA能做的单片机不一定能做。 最初，FPGA是可编程逻辑阵列，啥意思，就是一堆与或非门，你的工作说白了就是搭电路图完成逻辑功能，比如做通信设备，就要完成E1或SDH的各种编解码，如果是简单的业务逻辑，比如PCM语音业务，用电阻电容三极管搭就行了，可如果逻辑复杂，电阻电容搭的就太大太笨了，而且成本高，于是有牛人把这些东西集成到硅芯片里，就是集成电路，后来更有牛人让这个集成电路芯片可以自由修改，就成FPGA了。。。说的太糙了，凑合看吧，大概意思。FPGA的开发我是经常看到的，总结一下就是逻辑实现+约束+综合+仿真，非常类似嵌入式开发的编码+编译+调试的开发流程，而且都是写代码，只是此代码非彼代码。 XEON：至强Xeon是英特尔生产的微处理器，它用于”中间范围”的企业服务器和工作站。基于奔腾微处理器P6构架，它被设计成与新的快速外围元件互连线以及加速图形端口一起工作。Xeon具有：512千字节或1兆字节，400MHz的高速缓冲存储器、在处理器、RAM和I/O器件之间传递数据的高速总线、能提供36位地址的扩展服务器内存结构。 OpenCL：OpenCL（全称Open Computing Language，开放运算语言）是第一个面向异构系统通用目的并行编程的开放式、免费标准，也是一个统一的编程环境，便于软件开发人员为高性能计算服务器、桌面计算系统、手持设备编写高效轻便的代码，而且广泛适用于多核心处理器(CPU)、图形处理器(GPU)、Cell类型架构以及数字信号处理器(DSP)等其他并行处理器.OpenCL是一个为异构平台编写程序的框架，此异构平台可由CPU，GPU或其他类型的处理器组成。OpenCL由一门用于编写kernels （在OpenCL设备上运行的函数）的语言（基于C99）和一组用于定义并控制平台的API组成。 意法半导体（ST）集团于1988年6月成立，是由意大利的SGS微电子公司和法国Thomson半导体公司合并而成。1998年5月，SGS-THOMSON Microelectronics将公司名称改为意法半导体有限公司。意法半导体是世界最大的半导体公司之一。 电气特性一般来说：是指某个用电设备(或元件)在电气方面如电压、电流、导电性能等等方面所具有的特性。 NAS（Network Attached Storage：网络附属存储）按字面简单说就是连接在网络上，具备资料存储功能的装置，因此也称为“网络存储器”。它是一种专用数据存储服务器。它以数据为中心，将存储设备与服务器彻底分离，集中管理数据，从而释放带宽、提高性能、降低总拥有成本、保护投资。其成本远远低于使用服务器存储，而效率却远远高于后者。]]></content>
      <categories>
        <category>学习札记-POWER</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>POWER</tag>
        <tag>积累学习_FIRST</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOC_茶道]]></title>
    <url>%2F2018%2F12%2F29%2FMOOC-%E8%8C%B6%E9%81%93%2F</url>
    <content type="text"><![CDATA[茶，性俭，行俭德之人。–陆羽《茶经》 茶文化特征：洁性不可污、俭德可行道、示礼致和乐。 乘丰壤之滋润、受甘露之霄降。–杜甫 故人气味茶样清、故人风景茶样明。 水清极则形象明、心静极则智慧生。 清晨开门七件事，柴米油盐酱醋茶。]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>MOOD</tag>
        <tag>茶道</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOC_孙子兵法]]></title>
    <url>%2F2018%2F12%2F29%2FMOOC-%E5%AD%99%E5%AD%90%E5%85%B5%E6%B3%95%2F</url>
    <content type="text"><![CDATA[孙武，字长卿。春秋末期齐国人（山东惠民）。撰写地是：江苏省苏州市穹窿山《孙子兵法》的最终目标是“止戈为武”。《孙子兵法》具有“时新”性，即将其中的某些词进行替换，就好像是昨天说的一样。 子：是古代对于有学问的人的尊称。 孙子十三篇 国家层面： 《计篇》国家的战略运筹——算胜之道。 《用间篇》用间获取情报——知胜篇。 《作战篇》——决胜之道。 《谋攻篇》——全胜之道。 军队素养层面： 《形篇》——形胜之道 《势篇》——势胜之道 《虚实篇》 战场环境的运用： 《地形篇》——地胜之道 《九地篇》——人胜之道 《火攻篇》——天胜之道 战场对敌： 《军争篇》 《九变篇》 《行军篇》 《孙子兵法》能够告诉你如何在现代竞争洪流中保持理性认识。 战争时期的战争——战争；和平时期的战争——竞争； 《计篇》 察：察胜之道。认真研究生存之道，总论战争的意义与他的重要性。 经：五事胜算。道、天、地、将、法。如何强化战争的力量建设。 知之者胜，不知者不胜。 校：校胜之道。战前对敌我双方的七个方面情况做出重点比较，这是计策前 提。致胜之道。“主孰有道、将孰有能、天地孰得、法令孰行、兵众孰强 、士卒孰练、赏罚孰明”。校之以计、而察其情。 训：致胜之道。如何获得胜利、保证计划的实施。目的在于掌握致胜的主动 权。 诡：通过致胜的策略，达到攻其无备、出其不意的致胜之道。]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>MOOD</tag>
        <tag>孙子兵法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOC_思想品德修养]]></title>
    <url>%2F2018%2F12%2F29%2FMOOC-%E6%80%9D%E6%83%B3%E5%93%81%E5%BE%B7%E4%BF%AE%E5%85%BB%2F</url>
    <content type="text"><![CDATA[TRIZ理论 评价： 苏联的国家机密 技术创新的点金石 现代企业创新的独门暗器 当今世界上最强大的创新设计理论 相关图书： 《发明是这样诞生的》 《创新40法》 《哇发明家诞生了》 《技术创新理论（TRIZ）及应用》 奥斯本6M法则 改变，即改变功能、颜色、形状、气味和其它。 增加，增加尺寸、强度和新的特性。 减少，即做好减轻、减薄、减短、减去过多功能至少是一时用不上的功能。 替代，即用其它材料、零部件、能源、色彩来取而代之。 颠倒，即对现有设计来一个上下、左右、例外、反正、前后的颠倒，甚至目 甚至目标与手段的颠倒。 重组，即零部件、材料方案、财务等重新组合。 技术方案构思方法 检验表法。从一个事物的方方面面考虑，列出一系列问题，逐一核对讨论，从中获得解决问题的方法和创造发明的设想。 沉默是金，在不知道的状态下需要保持沉默。 更加协作的方式； 更加独到的研究方式；没有调查就没有发言权 张扬自己的个性、表示自己的锋芒、必须要有独到之处； 更加精彩的思想表达。C：变革 change、C：沟通 communicate、C：表达 convery 政治老师说：房价一般是该城市人均年收入的10倍左右。哈尔滨的人均收入大约是5万，所以在哈尔滨买一套房子的价格大约是50万。如果高过了这个房价就说明这个城市的房地产的发展是畸形的。 如果要进行创业需要考虑五个方面的重要因素： 自然资源：基础性作用 资本资源：支持性作用 知识资源：主导性作用 人力资源：核心性作用 文化资源：持久性作用]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>MOOD</tag>
        <tag>思想品德修养</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOC_说文解字]]></title>
    <url>%2F2018%2F12%2F29%2FMOOC-%E8%AF%B4%E6%96%87%E8%A7%A3%E5%AD%97%2F</url>
    <content type="text"><![CDATA[弘：强健、有力；毅：有决心、毅力。 仁：两个人。搞好两个人的关系，这个社会就会变的很 美好。 男：用力于田。 文字本身就是历史。 古代人以三为多。 囟门为合。 七十为老。古代老与考是同一个意思。但是两个字表示同一个 意思有些浪费，所以用老来表示或者的老人，用考来来表示 死了的老人。 比：两个人挨着，坐在一起。 败北；北在古代的时候就是背。当打仗的时候是两个人面对面 如果被打败了就要逃跑，逃跑的话就要转身就是背对这别人， 所以称为败北。 氓：失去家、国，被抓来做奴隶的人。 隐几而卧。 殷富、殷实、殷商。 隶书：晋卫恒《四体书势》记载：“秦既用篆，奏事繁多，篆字难成，即令隶人佐书，曰隶字。”程邈将当时这种书体加以整理，后世遂有程邈创隶书传说。隶书相传为秦未程邈在狱中所整理，去繁就简，字形变圆为方，笔划改曲为直，字形优美，扁而较宽，所以被称为“官吏”，即“官隶” 。 十口为古 音是一切发出的声，言是有意义的音。 甘不一定是甜，味美为甘。 后面为牙，前面为齿。先长齿。什么年龄张什么牙齿 是一定的，所以年龄的左边是齿。咬牙切齿。 八尺为寻。寻常人。 皇帝出行，走在中间，左史记言，右史记事。 学在过去叫做效（xiao）。]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>MOOD</tag>
        <tag>说文解字</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOC_道德经]]></title>
    <url>%2F2018%2F12%2F29%2FMOOC-%E9%81%93%E5%BE%B7%E7%BB%8F%2F</url>
    <content type="text"><![CDATA[道经：1-37章；德经：38-81章；如何学习道德经：训字、考句、词章、意理；老子是今河南鹿邑人。聃（dan）。对于老子的评价：迎之不见其首、随之不见其尾。道德经是老子在出函谷关的时候，被迫写的。老子出了函谷关去了哪里、什么时候死的、死在了哪里，人们都不知道。 萧规曹随：萧何创立了规章制度之后，曹参做了宰相，仍照着实行。比喻按照前任的成规办事。道德经的价值如何进行学习：辨其大义以立修己治人之体、察其微言以善精益入神之用。 第三章：不役于物，无为而治；为无为则无不治。 第四章：和光同尘。 第五章：慎言；多言数守，不如守中。山中有直树、世上无直言。 第七章：奉三无私。 第八章：立志当如山、行道要如水；不如山，不能坚定，不如水，不能曲达。 第九章：持盈保状，功随身尽。 ​ ​ 道德经 第九章 持而盈之，不如其已。 揣而锐之，不可长保。 金玉满堂，莫之能守。 富贵而骄，自遗其咎。 功遂身退，天之道也。 译文： 手握的东西已装满，不如别再装了； 度量并且打磨锐利，恐怕难以长保。 金玉堆满了大堂，没有人能全守得住； 富贵后大耍骄横，就是自己落下祸根。 巨大功业完成，身心就要彻底退出，这是天之道。 第十章：为而不恃、生而不有、长而不宰。 赤子之心：心是孝悌忠信、身是礼义廉耻、行是仁爱和平。 第十一章：虚怀若谷。宰相肚里能撑船、好汉肩上能跑马。 第十二章：宠辱不惊。宠辱不惊看庭前花开花落，去留无意任天上云卷云舒。 第十四章：洞幽察微，知古鉴今。鉴：在古时是一种器物，在早期的时候并没有镜子，所以在“鉴”中装满水，然后通过水，看到自己的样貌，所以称其为鉴。 大成若缺。 虚静观复。风行地上，细致入微，观察万物。 第十九章：标本兼治。见素抱朴、少私寡欲。 第二十章：独特风格。唯、诺；都是回答的方式，但是它们是 有区别的，唯是下级回答上级、诺是上级回答下级。 删繁就简 三秋树、领异标新 二月花：这个样子断句就应该能够 明白是什么意思了。三秋的树，叶子都掉光了，一眼过去就知道哪是树干哪 是树枝，你的文章应该也如此，去掉多余的部分，干练简洁清晰明了；二月花灿烂明媚，是经冬之后的第一抹亮色，异常惹眼，你的观点就应该这样惹眼。“删繁就简三秋树，领异标新二月花。”上联主张以最简练的笔墨表现最丰富的内容，以少许胜多许。比如画兰竹易流于枝蔓，应删繁就简，使如三秋之树，瘦劲秀挺，没有细枝密叶。下联主张要“自出手眼，自树脊骨”，不可赶浪头、趋风气，必须自辟新路，似二月花，一花引来百花开，生机勃勃。也就是创造与众不同的新格调。 第二十一章：现象本质、循名求实、察言观行。抓住本质， 便能够很好的解决问题。而循名求实与察言观行，便是方法。 第二十二章：绝活意识：抱一为天下式，现在的成语是 一以贯之。一招鲜吃遍天。意思是别人有的我也有，并且 是更好的。别人没有的我也有。工匠精神。谦虚内敛、 不辩不争。不要被小事所羁绊，不必沽名钓誉，要追 求自己的目标，追求伟大的事业。 第二十三章：谣言非议：飘风不终朝、骤雨不终日。大自然 都不能够长久，更何况是人呢。欲穷千里目、更上一层楼。 但是你有看千里的眼里吗？有再上一层楼的脚力吗？切记 知止不殆、适可而止。辟谣的方法：不信、不闻、不问、 不痛、不痒，我相信自己可以获得更好。 第二十四章：自我膨胀、自取灭亡。企者不立、跨者不行：踮着脚尖 难于站立、张着双腿难以行走。余食赘行。 第二十五章：道法自然。四大皆空中的四大指的是：道大、天大、地大、 人大。人法地：人效法与地面上的东西。三立：立德（立天之道，曰阳与 阴）、立言（立人之道，曰仁与义，仁之道在爱人（别人）、义之道在正 己）、立功（立地之道，曰刚与柔）。 第二十六章：敬重尊敬。重为轻根、静为躁君，虽有荣观、燕处超然， 以静制动、以静处世。轻则失根，重则失君。 第二十七章：人尽其才、物尽其用、无弃人物。善救人则无弃人、善救物 则无弃物。自得师者王。帝者与师处、王者与友处、霸者与臣处、亡国与 役处。 第二十八章；雄雌白黑。知其雄，守其雌。 第二十九章：中庸之道、力戒极端。是以圣人，去甚、去奢、去泰。]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>MOOD</tag>
        <tag>道德经</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOC_心理学]]></title>
    <url>%2F2018%2F12%2F29%2FMOOC-%E5%BF%83%E7%90%86%E5%AD%A6%2F</url>
    <content type="text"><![CDATA[心理学是研究心理和行为的科学。目标是：描述、解释、预测、控制。 有人的地方就有心理学。 旁观者效应。责任分担。 无论这个世界有多么的虚伪，都有我在你的身边为你撑出一片碧海蓝天。 心理学的创始者是冯特。他有一本著作《人类与动物心理学论稿》 完型心理学：反对元素分析，强调整体组织。 精神分析流。由弗洛伊德创立；研究对象是：潜意识和意识。 心理防御机制包括：推行、合理化：提升自己得到的东西的价值（甜柠檬） 贬低自己得不到的东西的价值（酸葡萄）。 行为主义。由美国人华生创办。目的：探求不同刺激（S)与不同反应(R)的 关系。 人本主义。 刻板效应 ​ 社会心理学认为，那种用老眼光看人造成的影响称为“刻板效应”。它是对人的一种固定而笼统的看法，从而产生一种刻板印象。在学校经常可见到这种现象，教师对那些天资聪颖、学习成绩优秀的学生，脸上往往流露出喜爱的神色，并受到器重和青睐。而天资愚笨、学习成绩较差的学生则往往受到歧视，教师表现出急躁、厌烦的情绪，令人沮丧的话常挂在嘴边。实践证明，经常受到这种“待遇”的学生，会顿觉凉水浇身，丧失了学习信心，失掉了克服困难的勇气，以至产生颓废情绪。 首因效应 ​ 首因效应有时又称为第一印象的作用，指的是知觉对象给知觉者留下第一印象对社会知觉的影响作用。具体说，就是初次与人或事接触时，在心理上产生对某人或某事带有情感因素的定势，从而影响到以后对该人或该事的评价。所以，我们可以看出，对决策中收集正确的情报加以分析而言，这种效应是不利的。无论第一印象是好或是坏都是片面的，不利于全面地了解、分析。第一印象所产生的作用称之为首因效应。根据第一印象来评价一个人的好坏，往往比较偏颇。如果在招聘考试和考察员工绩效时，只凭第一印象，就会被某些表面现象蒙蔽。首因效应在招聘过程中主要表现有两个方面：一是以貌取人。对仪表堂堂、风度翩翩的应聘者容易赢得主考官的好感，二是以言取人，那些口若悬河、对答如流者往往给人留下好印象。因此在选拔人才时，既要听其言、观其貌，还要察其行、考其绩。 近因效应 ​ 近因效应指的是某人或某事的近期表现在头脑中占据优势，从而改变了对该人或该事的一贯看法。近因效应与首因效应是相对应的两种效应。首因效应一般在较陌生的情况下产生影响，而近因效应一般在较熟悉的情况下产生影响。两者都是对人或事的片面了解而主观臆断，使得决策信息失真。 晕轮效应（光环效应） ​ 晕轮效应是指某人或某事由于其突出的特征留下了深刻的印象，而忽视了其它的心理和行为品质。它有时会产生“积极肯定的晕轮”，有时会产生“消极否定的晕轮”，这都会干扰对信息的评价，要克服晕轮效应就必须坚持客观，不掺杂主观成分。 蝴蝶效应 ​ 1960 年，美国麻省理工学院教授洛伦兹研究“长期天气预报问题时，出现了疑难问题：她在计算机上用一组简化数据模拟天气的演变，原本是想利用计算机的高速运算来提高天气预报的准确性。但是，事与愿违，多次计算表明，初始条件的极微小差异，会导致错误的结论。心理情绪也是如此，有一组漫画显示，一个人在单位被领导训了一顿，心里很恼火，回家冲妻子发起了脾气，妻子无来由地被训，也很生气，就摔门而去。走在街上，一条宠物狗拦住了去路，“汪汪”狂吠，妻子更生气啦，就一脚踢过去，小狗受到踢打，狂奔路过一个老人面前，把老人吓了一跳。正巧这位老人有心脏病，被突然冲出的小狗一吓，当场心脏病发作，不治身亡。洛伦兹发现了微小差异导致的巨大反差，她用一个形象的比喻来表达这个发现，一只小小的蝴蝶在巴西上空振动翅膀，它煽动起来的小小漩涡与其他气流汇合，可能在一个月后的美国得克萨斯州会引起一场风暴——这就是混沌学中著名的“蝴蝶效应”。 ​ 在对人力资源的管理中，人事管理工作者如果灵活运用人事心理效应，就能充分调动下属或人才的积极性，使人尽其才，才尽其能，从而使工作效能达到最优。 罗森塔尔效应 ​ 美国心理学家罗森塔尔考查某校，随意从每班抽 3 名学生共 18人写在一张表格上，交给校长，极为认真地说：“这 18 名学生经过科学测定智商很高。”事过半年，罗氏又来到该校，发现这 18 名学生的确表现超常。罗森塔尔效应就是期望心理中的共鸣现象。运用到人事管理中，就要求领导对下属要投入感情、希望和特别的诱导，使下属得以发挥自身的主动性和创造性。如领导在交办某一项任务时，不妨对下属说：“我相信你一定能办好”、“我想早点听到你成功的消息。”这样下属就会朝你期待的方向发展，人才也就在期待之中得以产生。 鲶鱼效应 ​ 从前，挪威人在海上捕得沙丁鱼后，如果能让它们活着抵港，卖价就会比死鱼高好几倍，但只有一条渔船能做到带活鱼回港。后来，人们发现这条船的鱼槽内不过是多了一条鲶鱼而已。原来当鲶鱼装入鱼槽后，由于环境陌生，就会四处游动，而沙丁鱼发现这一“异类”后，也会因紧张而加速游动。如此一来，沙丁鱼便延长了寿命。这就是“鲶鱼效应”。 ​ 运用鲶鱼效应，通过个体的“中途介入”，对群体起到竞争作用，它符合人才管理的运行机制。目前，一些机关单位实行的公开招考和竞争上岗，就是很好的典型。这种方法能够使人产生危机感从而更好地工作。 名片效应 ​ 有一位求职青年，应聘几家单位都被拒之门外，感到十分沮丧。最后，他又抱着一线希望到一家公司应聘，在此之前，他先打听该公司老总的历史，通过了解，他发现这个公司老总以前也有与自己相似的经历，于是他如获珍宝，在应聘时，他就与老总畅谈自己的求职经历，以及自己怀才不遇的愤慨，果然，这一席话博得了老总的赏识和同情，最终他被录用为业务经理。这就是所谓的名片效应。也即两个人在交往时，如果首先表明自己与对方的态度和价值观相同，就会使对方感觉到你与他有更多的相似性，从而很快地缩小与你的心理距离，更愿同你接近，结成良好的人际关系。在这里，有意识、有目的地向对方所表明的态度和观点如同名片一样把你介绍给对方。 ​ 恰当地使用”心理名片”，可以尽快促成人际关系的建立，但要使” 心理名片”起到应有的作用，首先，要善于捕捉对方的信息，把握真实的态度，寻找其积极的、你可以接受的观点，”制作”一张有效的”心理名片”。其次，寻找时机，恰到好处地向对方”出示”你的”心理名片”，这样，你就可以达到目标。掌握”心理名片”的应用艺术，对于人际交往记忆处理人际关系具有很大的实用价值。 虐狗狂魔巴甫洛夫 ​ 伊凡·巴甫洛夫（ 1849－1936）是一位极为不同的科学家，他是位实验生理学家，其职业生涯的前半部分进行的是消化研究。正是因为这个工作上的原因，他才注意到垂涎的狗这个奇怪的现象。他把职业生涯的下半部分用于他叫做“ 条件反射”的研究。他从始至终都认为条件制约是一种生理现象而非心理学过程，尽管制约的规则成为行为主义不可缺少的规则，就像学习和效应律一样，可是，他对心理学的看法如此之低，竟然威胁要开枪击毙胆敢在他实验室里使用心理学术语的人。他在弥留之际尚在声称，自己不是心理学家，而是一位研究大脑反射的生理学家。 ​ 巴甫洛夫出生在俄国中部的一个村庄上，他父亲是当地的东正教牧师，他母亲亦是一位牧师的女儿，巴甫洛夫也计划承袭家庭传统。当时，沙皇亚历山大二世刚颁布法令， 允许家庭贫穷但有天赋的孩子免费上学。巴甫洛夫两个条件都符合，因此就接受了小学和中学教育。可是，在中学阶段，巴甫洛夫读到了达尔文的《 物种起源》和俄国生理学家伊凡·塞基洛夫的《大脑反射》，因而就经过了某种类似转教的过程。他放弃了当牧师的计划，辍学到了圣彼德堡大学（同样也是因为沙皇的慷慨大度），专攻自然科学，塞基洛夫当时是这里的生理学教授。 ​ 巴甫洛夫1875年以优异成绩毕业了，进而研究医学，可是，他的目标是要进行研究工作，而不是实习，而且，他还得靠当助手的微薄薪水养活自己——1881年之后还得养活妻子。 当时，俄国给年轻科学家的机会比西方国家少得多，而且尽管巴甫洛夫有出众的才能和在生理学研究当中令人瞩目的成就，可是，多少年的时间里，他只能竭力维持最基本的生存。然而，他太执着于自己的工作了，根本无暇顾及日常生存的急迫需求。 他是不食人间烟火的知识分子象征。订婚的时候， 他没有钱为情人买奢侈品， 只有一次为她买了一件实用的东西： 一双鞋，而且还是她出远门急等着穿的。可是，等她到达目的地打开行李一看，里只有一只鞋。她写信问怎么回事，他回信说：“ 别找鞋了。我把它当作一件可以想起你来的纪念物放在我桌上。”他们结婚以后，几乎就是生活在贫困之中，他经常忘了领薪水，直到妻子提醒方才知道。有年冬天，他没有钱为公寓买一些燃料， 致使他用来研究脱变现象的一群蝴蝶冷死了。他的妻子因为贫穷而发牢骚，而巴甫洛夫却恼怒万分地说：“ 唉呀呀，别烦我了。我所有的蝴蝶都死了，出了这样令人伤心的事，你却还在这里抱怨一些愚不可及，鸡毛蒜皮的小事。” ​ 可在实验室里，巴甫洛夫却是个实际的人，一位完美主义者，而且办事有条有理。他希望自己的助手按他的标准来实践，稍有越矩便受惩罚或者开除掉，不管原因何在。在革命期间（他在许多年里一直对此不抱同情态度，不过，最终还是成为这个制度的支持者），其中的一名雇员迟到了。巴甫洛夫严加责问时，这人说，一路上，街上出现了巷战， 他差点连命都丢了。可巴甫洛夫愤怒地回答说，这构不成一个理由， 因为对科学的贡献应该超过一切其它的动机。按照一些人的说法，巴甫洛夫还是将此人解雇了。那是巴甫洛夫成功之后很久的事了。 ​ 1891年，巴甫洛夫 42岁的时候，他终于被圣彼德堡军事科学院任命为教授，又过了几年被圣彼德堡大学任命为教授。有这样一些扎实的基础之后，他开始组建实验医学研究所，他在这个研究所里进行了40年的研究。他在19世纪 90年代的工作是进行消化研究， 通过外科手术切开实验狗的胃部，并在里面植入一个带瘘管的小囊。这可以让他观察胃反射（狗开始吃食时胃液的分泌），而又不让食物污染胃液。他的发现使其获得1904年的诺贝尔医学奖，1907年，他成为俄国科学院院士，或者专职会员，到达了俄国科学声望的顶峰。 ​ 1897至1900之间，在他的胃反射研究的中途，巴甫洛夫注意到了一种奇怪而令人烦心的现象： 狗在不是喂食的时候也会分泌出一些胃液和唾液， 比如，在比正式喂食时间稍为前一点，它如果看见或者听见喂养者的时候。起初， 巴甫洛夫认为这是件烦人的事，因为这会影响到有关消化分泌物的数量的数据。可是，他想到，一定有个什么原因可以来解释， 狗为什么会在嘴里甚至附近没有食物时也会产生这样一些液体。一个明显的解释是，狗“意识”到进餐时间快到了，而这个念头会产生分泌物，可是，坚决反对心理学的巴甫洛夫对这些主观的猜想绝不会轻信。 ​ 尽管他不太情愿进行这方面的研究，可是，巴甫洛夫最终还是决定去了解一下，因为，在他的观点来看，这完全是个生理学的现象——因为受到看见或者听见经常喂食的人这种刺激而在大脑里面产生的一种反射，该反射引起了“ 精神性分泌”。 1902年，他开始研究这种并非与腺体反应有固有联系的刺激是在什么时候和以怎样的方式引起这种反应。这种现象，他一直研究了一辈子。 ​ 巴甫洛夫虽然是位外科专家，却并没有为这项研究花费精力去做一只胃囊。由于狗看到喂食的人时既产生胃液，也产生唾液，在唾液腺体上做一只简单的囊，并把它挂在高处，导入一个收集和记录装置就可以了。 狗接受培训后站在桌子上不动，而且因此得到奖赏、抚弄和喂食。由于急于逗人高兴， 它往往不需要人告诉它而自己跳到桌上，而且极有耐心地站在上面不动，带着不太紧的套圈，再与一些设备相连。需要用套圈来防止损坏设备。这套设备由一只橡皮管把腺囊与收集容器和记录筒连着。狗面对着一扇带窗户的墙，面对它们的地方，在实验室的里面，有一只喂食桶，可以通过机械装置把食物倒进这只桶里。食物一到狗嘴里面后， 其唾液即开始溢出。 由于这是一种不需要培训的反射， 巴甫洛夫把食物叫做“ 非条件刺激”，把这种唾液反应叫做“ 非条件反射”。 可是，要研究的事情是中性的刺激与同样的反射之间的联系。最典型的模式是，实验者在不被狗看到的地方发出一个响声，这样的话， 就不会对狗形成信号作用。这样的响声可以通过摇铃， 按蜂鸣器制造出来，而且会引起食物向喂食桶倒食， 倾倒的时间间隔为 5－30秒之后。起先，铃档的声音或者蜂鸣器的声音只会引起一般的反射——狗竖起耳朵来——但不会出现唾液反射。可是，经过几轮试验之后， 仅是这个声音就会使狗的唾液开始溢出。 按巴甫洛夫的说法， 声音已经变成引起唾液反应的“ 条件刺激”，而唾液反应则已经成为声音的“ 条件反射”。巴甫洛夫及其助手们变换了这个实验的各种形式。他们经常不用声音，而是使灯光闪动，或者在狗可以通过窗户看到的地方转动一个物体，或者操纵某个可以碰触到狗的仪器， 或者拉动狗圈某个部位， 变换中性刺激与喂食之间的时间间隔等等。在所有的情况下，中性刺激都可以变成条件刺激， 可是， 其容易程度不太一样。 中性的某种气体（ 不是食物气味） 可能需要 20多次配对才能成为条件刺激，而一种在狗的视线所及的地方转动一个物体却可能只需要 5次配对，一种高声的蜂鸣器只需要一次就可以了。 ​ 心理学家可能会把这种条件形成过程称作联想学习，可是，巴甫洛夫是用生理学术语来解释的。 他向导师塞基洛夫和第一个提出反射学说的笛卡儿表示了谢意，并提出非条件的反应，比如将食物放进嘴里时出现的唾液反应，是一种大脑反应：是存在于脊柱或者下脑中枢里的感觉和运动神经之间的一种直接连接。对比而言，条件反射，比如听到一阵铃声或者其它在以前都是中性刺激的声音时出现唾液现象，是由条件形成过程中在大脑皮层里建立起来的新反射通道的结果。巴甫洛夫以极为详细的细节阐述了他的大脑定位反射理论，以支持他就条件形成所获得的发现。 可除了在苏联以外， 这个学说在很大程度上为人们所忽略了，而在美国，它被心理学家卡尔·拉什利全盘否定了；拉什利切除了老鼠不同部位和不同量的大脑皮质， 再让它们学习迷宫走法， 发现老鼠学习能力的缺失与任何某个具体的皮层区的损坏没有关系，而是与切除掉的总量有关系。 ​ 然而，巴甫洛夫的生理学理论却丝毫也不影响到人们对他的实验数据和条件形成法则热情的欢迎程度，都认为这是对心理学知识的极大贡献，即使他从不承认自己是心理学家。]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>MOOD</tag>
        <tag>心理学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOC_民法]]></title>
    <url>%2F2018%2F12%2F29%2FMOOC-%E6%B0%91%E6%B3%95%2F</url>
    <content type="text"><![CDATA[出生有两部分组成。出：从母体脱离；生：是活体。 死亡分为两种。自然死亡：生理死亡；宣告死亡：宣定某个人死亡。 死者的物质性人格利益（遗体、遗骨）；精神性人格利益（姓名、肖像、隐私）仍需保护。但是起诉的人需要第一顺位：配偶、父母、子女。第二顺位：祖父母、外祖父母、孙子女、外孙子女、兄弟姐妹。 人死之后，人身权利终止、财产权利终止。 具体有七中人格权+一般人格权。 死亡赔偿金赔偿的不是命，是受害者的近亲属因为受害 者死亡导致的抚养费的丧失造成的损失。 最怕公权来侵犯私权。 名誉权受侵害的方式：侮辱+诽谤 为避免挂一漏万所以有了一般人格权。 一般人格权是一种内涵与外延都不明确的框架性权利。]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>MOOD</tag>
        <tag>民法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOC_仪表礼仪]]></title>
    <url>%2F2018%2F12%2F29%2FMOOC-%E4%BB%AA%E8%A1%A8%E7%A4%BC%E4%BB%AA%2F</url>
    <content type="text"><![CDATA[西服里面衬衫的衣袖要比外面的衣袖长1公分。 男士穿西服，要穿深色的棉袜袜子，一定不要穿白色的袜子，不要穿丝袜、尼龙袜。 入座的时候要从左办开始入座。 最好是左手放在右手上面因为，左手干的事情少，显得更加的漂亮。 一个人身上的配饰不要超过六个点，眼镜算一个点。 穿衣服的时候的重要性：鞋子&gt;裤子&gt;上衣内衬&gt;上衣外套 女士站立的时候需要：挺立、直腰、并膝、向上；步态：从容、平稳、直线；手势不能够太频繁。 欲知其人，先观其朋。 交友的原则：明确目的、广泛交友、坚持原则、完善自我、真诚付出。 与异性交友的原则：男女有别、互相尊重、光明正大、顾全大局。 当与他人分手的时候需要：面谈需要选择一个公共场所，因为环境能够对其情绪产生压制、控制；第二在分手的时候要多说一下自己的不是不要老是数落对方的不是。 在乘坐自动扶梯的时候需要靠右站。 车子上的最好的位置就是副驾驶座后面的位置。在上车的时候首先把屁股放到车子里面，然后需要做的就是抖擞一下叫上的泥，然后把两只脚同时收到车子里面。 在乘坐飞机的时候一定要提前1.5到2小时抵达机场进行安检、行李托运等。 在乘坐飞机的时候要把小桌板收起来（给自己留好逃生通道）、把座椅调直（给他人留好逃生通道）、打开遮光板（便于自己观察跑道两侧的景物）。反正就是为了安全考虑。 三里不同音、十里不同俗。 探望病人的时候需要在下午4：00之后晚上9：00之前去，因为早上病人需要进行治疗、医生查房、护士也在忙碌，如果这个时候去的话是非常的不合适。下午病人睡过午觉之后，精神好，所以是非常的合适。 探望病人时送的礼物也是有讲究的，呼吸道的不送鲜花、糖尿病的不送水果。 谦恭有礼。要针对应聘的单位、岗位，对自己的建立进行适当的更改。 选择好大电话的时间、构思好打电话的内容。调理清晰、言简意赅、保持一个好的情绪。培养镜头意识。整理好所处的环境、声音画面的清晰 研究对方、研究自己。挑选服装、打造自己的形象。质感要好。 裙子短，上衣长，显得年轻，搭配协调。 遵时守信、切勿迟到。关闭手机，耐心等候。敲门请示，轻进关门。面带微笑，点头示意。允后坐下，轻声致谢。然后问一下，是要站着参加考试还是需要做着考试。递东西的时候需要双手奉上。 为什么要来应聘我们公司的职位 我喜欢 我适合 能圆梦 如何回答期待的薪资待遇很感谢考官能够给出这个问题，因为每个人都会关心这个问题。首先我是一个刚刚毕业的学生，没有什么经验，不知道能不能够胜任这个工作。如果我能够胜任，那么贵公司一定不会亏待我的。 面试问题自我介绍→ 不是表决心家庭情况→ 家庭氛围、教育情况自己最大的弱点→ 如果自己的弱点是这个岗位不能容忍的所以不能表现出来。你有什么样的业余爱好→ 通过业余爱好进一步的了解为什么要来该公司应聘→ 我喜欢、我适合、能够圆梦薪水→ 表达一种想法就可以了。感谢考官跟我剔除这个问题，因为每个人都会考虑自己将来的待遇，首先我是刚毕业的学生，我没有经验，不知道能够胜任这个工作，如果自己能够胜任的话，贵公司也不会亏待我的，一定会相应的在待遇上给予我肯定。一个好的公司肯定会待遇留人。 教材《现代礼仪》 ##如何快速融入工作环境 要保持适度的距离 要尊重同事 物质往来要清楚 要关心同事 用于认错道歉 不要唯我独尊 不要牢骚不断 不要老让同事请客 不要趾高气扬 不要打听传播个人隐私如何面对领导 调整好心态 维护好领导的形象 主动向领导汇报 不要提领导做决定，但是可以引导说出自己的想法。]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>仪表礼仪</tag>
        <tag>MOOD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MOOD_婚姻爱情]]></title>
    <url>%2F2018%2F12%2F29%2FMOOD-%E5%A9%9A%E5%A7%BB%E7%88%B1%E6%83%85%2F</url>
    <content type="text"><![CDATA[诚不我欺 或 古人诚不我欺。意思是：古人的话确实并没有欺骗我呀，也就是古人说的对极了。 蒸不烂、煮不熟、锤不扁、炒不爆的铜豌豆。 我不是完美小孩。 生年不满百，常怀千岁忧。 其身正不令而行，其身不正虽令不从。 不完美 等价于 我叫不高兴。 水至清则无鱼。 欣赏高标准，赞美严要求。高标准美，严要求赞。 从不说不的交情，才是最好的交情。 忍无可忍，从头再忍。 挖个坑 练 皇帝长着兔耳朵。]]></content>
      <categories>
        <category>学习札记-MOOD</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>MOOD</tag>
        <tag>婚姻爱情</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[COURSE_多传感器融合技术]]></title>
    <url>%2F2018%2F12%2F29%2FCOURSE-%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88%E6%8A%80%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[2月28号提纲 常用融合方法 加权平均 卡尔曼滤波器 贝叶斯 证据理论 具有置信因子的产生式规则 模糊逻辑 小波分析 发展期望 人工智能——神经网络——模糊理论]]></content>
      <categories>
        <category>学习札记-COURSE</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>COURSE</tag>
        <tag>多传感器融合技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[COURSE_算法设计与分析]]></title>
    <url>%2F2018%2F12%2F29%2FCOURSE-%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[老师办公地点：综合楼815。老师电子邮件：csy@hit.edu.cn 助教地址：综合楼815 。助教电子邮件：kunyichenghit@126.com 、 zhutongxinhit@126.com 提交作业的电子邮件地址：algorithmhit2018@163.com 考核方式：作业+考试 80% 、 实验 20%。课后自己做。2月27号 三个证明问题没有搞明白。2月28号 同阶、低级、高阶、严格低级、严格高阶 向上取整、向下取整3月4日 分治算法的设计分为两步：设计+分析。 分治算法的耗时主要在两个方面：子问题的个数 + 合并方式3月11日 问题1 1是状态转移函数，表示在q状态下遇到a时，进入状态q’,写下符号b，然后读写头向左活或向右移动一个位置 2表示图灵机，Turing machine蚁群算法 蚁群算法是一种用来寻找优化路径的概率型算法。 蚁群算法的优势在哪里？ 在数学领域，根据问题本身的复杂度是有分类的。简单来说，问题分为P问题，NP问题，NPC问题，NP-hard问题。P是多项式这个单词的首写字母，即Polynomial，[这里指多项式时间]P问题意为 总能找到相应的经典算法 在多项式时间 里面得出最优解。NP问题意为 不能确定是否能找到相应算法 能够在多项式时间内 得出最优解。NPC问题可以理解成NP问题中最难（复杂度最高）的问题，也就是说很难找到相应算法 能够在多项式时间内得出最优解。NP-hard问题可以简单理解成找不到相应算法 能够在多项式时间内得出最优解。所有对NP问题的研究都集中在一个问题上，即究竟是否有P=NP？通常所谓的“NP问题”，其实就一句话：证明或推翻P=NP。 简单来说就是，传统的经典算法能够解决P类问题，而NP问题，特别是NPC问题，则束手无策，于是科学家们开始想办法了，既然不能在多项式时间里得出一个最优解，那么咱们得一个较优解吧，用先验的经验知识作为启发算子，于是启发式算法诞生了，但启发式算法只能针对特定问题（比如，prime算法和kruskal算法都是经典启发式算法，在最小生成树领域比较好的效果），启发式算法不适合跨领域，但NP问题又如此之多，怎么办，于是各种仿生学理论开始引入计算机的算法领域，诞生了所谓的蚁群，粒子群，遗传，神经网络算法这些统称智能优化算法（元启发式算法）的东东来求较优解。 最短路径的时候，用蚁群算法和用prime算法、克鲁斯卡尔算法相比有哪些优势呢？感觉蚁群算法开销不算小，而且还容易不收敛或者陷入局部最优。说道这个问题，就得提到启发式算法和元启发式算法的巨大区别。启发式算法针对的是特定领域的特定问题，效果良好，但一旦跨领域，效果锐减。元启发式算法则具有更明显的跨领域能力，能咋相当多的领域有漂亮的效果。简单来说，prime算法、克鲁斯卡尔算法等等都是启发式算法，启发算子是：贪心策略，即是对特定问题（最小生成树）的可能有较优解法，也就是说仅适用于这一类问题。P问题只是很少的一部分，我们大部分真实场景遇到的都是NP问题，在NP问题没有彻底解决的时候，如果不想死磕—非要找到一个能在多项式时间内得出最优解的算法，我们就只能假设P！=NP，我们就能用启发式算法了，然而，启发式算法本质是某个领域特定的经验总结，一旦跨领域就失效了，所以，现在求较优解的时候，如果没有特定的好的启发式算法，我们就用智能优化算法（即元启发式算法），比如蚁群算法。这就是元启发式算法的优势，也就是蚁群算法的优势。最后说说智能优化吧，这玩意儿本质上就是掷骰子，猜，不同智能优化，就是不同的猜的规则。个人感觉蚁群算法特别吃参数，这需要慢慢调。 第一章算法性能分析 As a rule of thumb, if the body of a loop is in O(na) then the whole loop is in O(na+1). Theexception is if you can show that the loop exits after a constant number of iterations. If aloop runs k times regardless of n, then the loop is in O(na), even for large k.]]></content>
      <categories>
        <category>学习札记-COURSE</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>COURSE</tag>
        <tag>算法设计与分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[COURSE_计算机系统性能评测]]></title>
    <url>%2F2018%2F12%2F29%2FCOURSE-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%AF%84%E6%B5%8B%2F</url>
    <content type="text"><![CDATA[联系方式 综合楼506 zuodc@hit.edu.cn 开卷考试 评测内容 知道系统能力 在知道需求的前提下如何使用最小的代价将系统搭建起来 美特卡夫定律 网络价值以用户数量平方的速度增长。 贝尔定理 计算机每10年产生新的一代，其设备或用户数增加10倍。 IaaS/Paas/Saas ICT 是information、communication、technology的缩写 SuperPI Super PI是一个计算圆周率精确到小数点以后的指定数位（最大3200万）的计算机程序。 Super PI被许多超频玩家用以测试电脑的性能及稳定性。 Super PI采用单线程，因此其作为目前多核心处理器性能指标的测试工具的意义迅速降低。 并行的两大定律 阿姆达尔定律 定义了串行系统并行化后的加速比的计算公式和理论上限。 古斯塔夫森定律 表明了处理器个数、并行比例和加速比之间的关系。增加负载。 主要内容 能力、成本、应用 选择、改进、设计]]></content>
      <categories>
        <category>学习札记-COURSE</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>COURSE</tag>
        <tag>计算机系统性能评测</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[COURSE_大数据管理与分析]]></title>
    <url>%2F2018%2F12%2F29%2FCOURSE-%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E4%B8%8E%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[Mesos+Zeppelin+Spark 构建可视化 spark SQL 查询平台Mesos Mesos是Apache下的开源分布式资源管理框架，它被称为分布式系统的内核。 Mesos管理着Twitter超过300000台服务器上的应用部署。 失败之鲸——fail whale。Twitter宕机时的标志画面。Zeppelin Zepplin是一个让交互式数据分析变得可行的基于网页的笔记本。Zeppelin提供了数据可视化的框架。方便你做出可数据驱动的、可交互可协作的精美文档，并且支持多种语言。Spark Apache专门为大柜么数据处理而设计的快速通用的计算引擎。 并行框架。 不同于Hadoop的是job中间输出结果可以保存在内存中，从而不需要读写HDFS。 更适合于数据挖掘和机器学习等需要迭代的MapReduce的算法。 经验 第一如果需要权限的话需要使用sudo，如果一下方法不好使的话，需要加上sudo。]]></content>
      <categories>
        <category>学习札记-COURSE</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>COURSE</tag>
        <tag>大数据管理与分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[COUESE_AdvanceDB]]></title>
    <url>%2F2018%2F12%2F29%2FCOUESE-AdvanceDB%2F</url>
    <content type="text"><![CDATA[元组之间可以相互链接。 多级索引。 bucket。（其实也就是个多级索引） 考试后发现的问题 parse、logic、physical Tree bitmap的压缩 每一个零完了之后，都写上一个“1” 计算各个比例的那个题目 two pass algorithm 线性可扩张索引 使用后面几位进行扩展 当使用的slot/总的slot大于阈值的时候进行分裂，分裂的同时进行数据重组。]]></content>
      <categories>
        <category>学习札记-COURSE</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>AdvanceDB</tag>
        <tag>COURSE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[COURSE_并行处理与体系结构]]></title>
    <url>%2F2018%2F12%2F29%2FCOURSE-%E5%B9%B6%E8%A1%8C%E5%A4%84%E7%90%86%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[2月28日 大庆 并行计算机是一组能够相互通信、相互协作以快速求解大型问题的处理器单元。 先行控制方式的原理 采用二次重叠执行方式必须解决两个问题： 有独立的取指令部件、指令分析部件和指令执行部件 把一个集中的指令控制器，分解成三个独立的控制器：存储控制器、指令控制器、运算控制器 要解决访问主存储器的冲突问题 取指令、分析指令、执行指令都可 能要访问存储器，可以采用先行控制技术解决存储器冲突。采用先行控制技术的关键是缓冲技术和预处理技术。 缓冲技术通–在工作速度不固定的两个功能部件之间设置缓冲栈，用以平滑功能部件之间的工作速度。 预处理技术–将进入运算器的指令均处理成RR型指令，而某些栈为其提供所需的操作数（先行读数栈、后续写数栈），这样运算器在进行预算时无需访问存储器，从而加快速度。 在采用了缓冲技术和预处理技术之后，运算器能够专心于数据的运算，从而大幅度提高程序的执行速度。 脉动阵列 SIMD 协程 不是进程或者是线程 不带返回值的函数调用 协程是用来模拟多任务并发的。但是因为它是非抢占式的，导致多任务时间片不能够公平分享，所以后来全部废弃了协程改成抢占式的线程。 协程的好处 foo bar 它们没有什么意义，就像是某某的意思，仅仅起到站位的作用。 原语 操所系统或计算机网络用于范畴 由一组指令构成，用于完成特定的功能 具有不可分割性 LinPack LINPACK是线性系统软件包(Linear system package) 的缩写.]]></content>
      <categories>
        <category>学习札记-COURSE</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>COURSE</tag>
        <tag>并行处理与体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[COURSE_嵌入式编程]]></title>
    <url>%2F2018%2F12%2F29%2FCOURSE-%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[读论文，制作PPT 论文题目：Michael Wolf and Monica Lam,”A data locality optimizing algorightm” in Proceedings,SIGPLAN ‘91 Conference on Programming Language Design and Implementation ,ACM,1991,pp.30-44’。 NOR的特点是芯片内执行（XIP, eXecute In Place），这样应用程序可以直接在flash 闪存内运行，不必再把代码读到系统RAM中。NOR的传输效率很高，在1～4MB的小容量时具有很高的成本效益，但是很低的写入和擦除 速度大大影响了它的性能。 NAND结构能提供极高的单元密度，可以达到高存储密度，并且写入和擦除的速度也很快。应用NAND的困难在于flash的管理需要特殊的系统接口。 NOR和NAND都是flash存储芯片的一种。 ScratchpadMemory（便筏存储器） SPM与主存进行统一编址 SPM不具有用于存储Tag的部件和地址比较部件，其面积一般为cache的65%。 体积小、功耗低、速度快，程序员可以进行灵活的控制。]]></content>
      <categories>
        <category>学习札记-COURSE</category>
      </categories>
      <tags>
        <tag>学习札记</tag>
        <tag>COURSE</tag>
        <tag>嵌入式编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_经验]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-%E7%BB%8F%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[无论如何, 一定要想办法能单步跟踪; 无论如何, 一定要有很方便的测试数据; 对于引用同一个名字的UserControl, 它们很可能不是同一个文件！！！ 对于看着很奇怪的问题， 应该把它写下来， 把前提和结果都详细写下来， 再仔细看前提。 大部分奇怪的结果是因为你错误的前提造成的——你的前提之中， 就有了一部分是由于粗心而弄错的， 它们实际上并不是你想象的样子 对于人名, 如果用户保存时包含了单引号或者双引号, 会引起意想不到的错误, 应该禁止; 如果一个业务功能，逻辑相当之复杂，以致于要写很多代码来完成，而且易于出错。应试首先试着想：是否能从业务的角度来简化，而不是死盯技术。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_MARKDOWN]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-MARKDOWN%2F</url>
    <content type="text"><![CDATA[MarkDowns是一个非常简单、非常容易学习的语法。仅为写作而生。在Mac上使用 Mon,在web上使用简书。简书上切换markdown的方式 图床一般是指储存图片的服务器. MarkDown2注册秘钥邮箱：Soar360@live.com授权秘钥：GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ== 火狐添加微博图床https://addons.mozilla.org/zh-CN/firefox/addon/%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/ 连接 Markdown入门指南，扫盲 中文语法书 英文语法书 经验 在使用代码的时候如果一ciTAB不好用，那么就两次。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>MARKDOWN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_STM32]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-STM32%2F</url>
    <content type="text"><![CDATA[如何学习 学前准备 入门级视频教程：鑫鑫stm32 初学者视频教程。最好先下个keil uvision4安装上。 第一节：http://video.tudou.com/v/XMjE5NTM1MjE4OA==.html 第二节：http://video.tudou.com/v/XMTc4OTcyNjI5Mg==.html 第三节：http://video.tudou.com/v/XMTc4Nzc3NDUzNg==.html 第四节：http://video.tudou.com/v/XMjE5NzU2MzU1Mg==.html 第五节：http://video.tudou.com/v/XMjE5ODU4MTUzMg==.html 第六节：http://video.tudou.com/v/XMjIwMjQ3ODg3Mg==.html 进阶级视频教程：刘洋老师边讲边写stm32。 编程前还需要一本stm32库函数手册。 然后就可以开始学了。没有开发板也没事，IDE里面有仿真器，但最好有一个开发板。因为只有软件，不会接线配电平什么的也不行 学习套路 首先，把片上外设学一遍，就ok了。 其次，通过做项目练习综合使用。 最后，进阶的话可以看看寄存器级的开发，以及内部储存空间的分配（可以试着写写iap）。 一开始不着急，可以先把程序整明白。 就是学会怎么启动以及配置各个外设就行了。官方的库函数都已经封装好了，多数情况下都不需要直接操作底层的寄存器。 如果官方的库里没有这个功能的代码，就只能自己通过设置对应寄存器解决。 教程不针对某一块特定的开发板 可以的，教程不针对特定型号的开发板 因为说白了单片机就是一芯片 开发板无非就是把片上外设的引脚印出来接了LED神马的东西，自己也能做的。 学的时候记得看电路图。如果你想做开发板上的实验的话，一定要有对应的电路图，因为不同板子GPIO的引脚配置不一样。 资料整理 刚刚给你的手册既有库函数的，也有寄存器的。你可以直接从库函数开发学起，但一定要有寄存器的概念。 XCOM是烧写片上程序的时候用的。 因为现在的板子大多用usb口，都不是Jlink的，所以就用XCOM往板子上烧写。 缺点就是没法实时调试。一个Jlink正版仿真器成本有点高，你一开始也未必用得上。 首要做的事情 所以先从最基本的写程序开始吧。小的程序IDE里调试过了上板子基本就不会有问题 等你把片上外设都学完了会用了之后再跟你说我做的那个IAP实验吧，那个作为进阶练习，可以让你对单片机理解更深一层。 细节 加油，别放弃。看教程的时候耐心点，多总结，多记笔记，有好处。 视频有点长，开始的时候可以边讲边写，后来有了基础后建议你看清楚外设的使用流程后自己写，不懂的地方再回头对照。 主要就是使用流程、配置参数这些环节记准了就没问题，一些小细节不必深究。千万别亦步亦趋只跟着抄代码，那样看完视频也学不会的。 多查手册，多查手册，多查手册 ###搭建环境 安装jlink驱动器。如果能够在设备管理器中看到，jlinkdrive说明jlink的驱动安装成功了。 安装keil5，但是需要安装连个legacy support，这个可以根据keil5的提示到给出的链接上下载，把那两个都下载下来，然后安装。 按照操作步骤将程序下载到开发板上即可。GPIO General Purpose Input Output.称为总线扩展器。如果外设有n只脚的话，那么gpio占了1/n.而好处是，能够通过软件编程设置gpio的高低电压，进而控制外设。 stm32中共有7个gpio，每个gpio有16个引脚。 在编程中如果要使用gpio的话。 创建gpio结构体变量。 在板子上需要要控制的外设的引脚，然后看到对面，如果是A11，那么代表着该外设是GPIOA的11号管脚。那么就要使用GPIO_Init(GPIOA, &amp;GPIO_InitStructure);进行初始化。使用GPIO_SetBits(GPIOA, GPIO_Pin_11);对该gpio的11号引脚进行赋值。注意 使用jlink调试的时候需要将boot调节到flash上即可。 使用串口调试的时候，方式是不同的。 板子需要进行供电，使用USB TO UART口进行供电就行，另一端直接连接在电源上即可。 跨文件引用的函数不要使用static进行修饰 尚未理解的代码 ///这段代码适合等头脑清醒的时候进行阅读 #define LED1_TOGGLE digitalToggle(GPIOB,GPIO_Pin_0) #define LED1_OFF digitalHi(GPIOB,GPIO_Pin_0) #define LED1_ON digitalLo(GPIOB,GPIO_Pin_0) #define digitalHi(p,i) {p-&gt;BSRR=i;} #define digitalLo(p,i) {p-&gt;BRR=i;} #define digitalToggle(p,i) {p-&gt;ODR^=i; 尚需掌握的技能 调试中断 NVIC(Nest Vectored Interrupt Controller内嵌向量中断控制器)。 EXTI（外部中断） 将gpio作为中断的处理流程 GPIO初始化 将gpio脚连接到extiline上。 exti初始化 nvic初始化 当中断到来后 清除gpio寄存器中的信号量。 清除exti上的信号量。头文件 头文件是要书写的，相应的.c文件需要引用的头文件全部包含在.h头文件中，在.c文件中只需要包含响应的.h文件即可，这样的话，在编译相应的.c文件的时候.h文件已经进行了编译。当在main函数中进行包含的时候不会再次进行编译，但是已经告诉main函数，要把这个文件包含进来，而这个文件中有响应函数的声明。SysTick 所有基于Cortex_M3处理器的微控制器都可以由这个定时器获得一定的时间间隔。常用术语 微控制单元(Microcontroller Unit；MCU) 需要解决的问题 通过串口未能成功将文件下载到开发板上。ADC 参考电压：测量物体的长度要用卷尺，精确测量要用游标卡尺，同理，ADC 测量电压也要有标准电压做基准。如八位并行比较型 ADC ，把参考电压均分为 256 层，就好像卷尺的刻度，输入的待测电压与哪一个分层相等，数值就知道了。经验 下一次在进行32的编程的时候，直接把头文件中的结构体的数据成员复制过来，这样简直就是太方便了，因为每个数据成员都有相应的十分详细的解释。与C语言不同之处 C语言中的unsigned long的个格式化输出占位符是lu;但是在stm32中编译环境是Keil中的时候就变成了ul。这是自己不能够理解的地方。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_SUPERSOCKE2]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-SUPERSOCKE2%2F</url>
    <content type="text"><![CDATA[命令和命令加载器实例 Command类 public class ADD : CommandBase&lt;GameSession, GameRequestInfo&gt; { string TAG = &quot;ADD:&quot;; public override void ExecuteCommand(GameSession session, GameRequestInfo requestInfo) { Console.WriteLine(TAG+&quot;Hello World&quot;); session.Send(requestInfo.ToString()); } //这个地方开不开启很重要 public override string Name { get { return &quot;01&quot;; } } } Filter class TerReceiveFilter : TerminatorReceiveFilter&lt;GameRequestInfo&gt; { string TAG = &quot;TerReceiveFilter:&quot;; public TerReceiveFilter() : base(Encoding.Default.GetBytes(&quot;##&quot;)) //传入固定的请求大小 { } //只是进行测试并没有进行解析 protected override GameRequestInfo ProcessMatchedRequest(byte[] data, int offset, int length) { Console.WriteLine(TAG + &quot;ProcessMatchedRequest&quot;); ///使用一个变量之前必须给它分配相应的内存空间 GameRequestInfo info = new GameRequestInfo(); //如果自己的过滤器重写了Name，那么Name的优先级大于command类的名字 //所以在给Key赋值的时候需要使用Name进行赋值，而不是使用command类的名字 //进行赋值。 info.Key = &quot;01&quot;; return info; } } Server class GameServer : AppServer&lt;GameSession, GameRequestInfo&gt; { string TAG = &quot;GameServer:&quot;; public GameServer() : base(new DefaultReceiveFilterFactory&lt;TerReceiveFilter, GameRequestInfo&gt;()) { //使用命令之后不需要注册这两个事件 //NewSessionConnected += GameServer_NewSessionConnected; //NewRequestReceived += GameServer_NewRequestReceived; } private void GameServer_NewRequestReceived(GameSession session, GameRequestInfo requestInfo) { Console.WriteLine(requestInfo.ToString()); } private void GameServer_NewSessionConnected(GameSession session) { Console.WriteLine(TAG + &quot;GameServer_NewSessionConnected&quot;); } } 命令过滤器 CommandFilter class GameCommandFilter:CommandFilterAttribute { ​ public override void OnCommandExecuted(CommandExecutingContext commandContext) ​ { ​ commandContext.Session.Items[“StartTime”] = DateTime.Now; ​ } ​ public override void OnCommandExecuting(CommandExecutingContext commandContext) ​ { ​ var session = commandContext.Session; ​ session.Logger.InfoFormat(“A command ‘{0}’ took {1} seconds!”, commandContext.CurrentCommand.Name, DateTime.Now.ToString()); ​ } } Command //为此命令应用命令过滤器 [GameCommandFilter] public class ADD : CommandBase&lt;GameSession, GameRequestInfo&gt; { ​ string TAG = “ADD:”; ​ public override void ExecuteCommand(GameSession session, GameRequestInfo requestInfo) ​ { ​ Console.WriteLine(TAG+”Hello World”); ​ session.Send(requestInfo.ToString()); ​ } ​ //这个地方开不开启很重要 ​ public override string Name ​ { ​ get ​ { ​ return “01”; ​ } ​ } } 配置文件app.config中标签的属性写错了之后，没有影响。 健康的蛀牙 多个服务器实例之间的交互，可以使用socket通信完成 将一个.exe打包到C#输出文件中。 右键项目 在第一个项目生成中选择类库 在调试中选择相应的.exe程序 右键项目选择重新生成 重新生成项目 清理项目 在资源管理器中查看该项目 昨天的那个问题是因为需要把x86CPU换成AnyCPU才行。因为x86和那个 SuperSocket.SocketService 不一致 在VS2015中需要使用sku=”.NETFramework,Version=v4.5.2。同时需要在属性中进行设置。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>SUPERCODE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_SUPERSOCKE1]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-SUPERSOCKE1%2F</url>
    <content type="text"><![CDATA[新建项目步骤 在vs中创建一个空白解决方案，选择好路径。 在解决方案下创建项目。VisualC#→Windows→控制台应用程序. 右键项目→ 属性→ 应用程序→ 目标框架→ .NET Framework 4. 右键引用→浏览添加supersocket需要的.dll文件。 右键项目新建文件夹Config，添加现有文件log4net.config和log4net.unix.config。这两个文件的属性按照要求进行设置即可。 调试运行出现错误。 右键引用→ .NET 添加错误提示中需要的.dll文件。测试指令 Telnet测试指令 telnet 127.0.0.1 2017问题 当一个类显示没有被包含进来的时候，需要根据API手册，找到相应的类。 当在使用Command时，调用自己写的APPSession和APPServer的时候出现了访问类型不一致的问题。原因是：自定义的AppSession的类的访问权限应该使用public进行限制。经验 在AppServer中OnStartup方法已经过时了(obsolete)，替代的方法是OnStarted方法。 在相对位置不同的类中引用其它路径下的类的时候，需要首先需要使用这个类的命名空间。 一个配置文件实例 &lt;?xml version=&quot;1.0&quot;?&gt; &lt;configuration&gt; &lt;configSections&gt; &lt;section name=&quot;superSocket&quot; type=&quot;SuperSocket.SocketEngine.Configuration.SocketServiceConfig, SuperSocket.SocketEngine&quot; /&gt; &lt;/configSections&gt; &lt;appSettings&gt; &lt;add key=&quot;ServiceName&quot; value=&quot;SupperSocketService&quot; /&gt; &lt;/appSettings&gt; &lt;!--开启匹配功能--&gt; &lt;superSocket xmlns=&quot;http://schema.supersocket.net/supersocket&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://schema.supersocket.net/supersocket http://schema.supersocket.net/v1-6/supersocket.xsd&quot;&gt; &lt;servers&gt; &lt;server name=&quot;GameServer&quot; logFactory=&quot;ConsoleLogFactory&quot; serverTypeName=&quot;GameServer&quot; ip=&quot;Any&quot; port=&quot;2017&quot; &gt; &lt;/server&gt; &lt;/servers&gt; &lt;!--type的第一个参数是服务器类的具体路径，第二个参数是项目名(是程序集名，而不是类的命名空间)--&gt; &lt;serverTypes&gt; &lt;add name=&quot;GameServer&quot; type=&quot;SuperSocketServer.Server1.GameServer, SuperSocketServer&quot;/&gt; &lt;/serverTypes&gt; &lt;!--为该服务器添加日志，生成的日志文件在bin/Debug/logs中进行查看；同时由于开启了日志功能，控制台也会打印相关的信息--&gt; &lt;logFactories&gt; &lt;add name=&quot;ConsoleLogFactory&quot; type=&quot;SuperSocket.SocketBase.Logging.ConsoleLogFactory, SuperSocket.SocketBase&quot; /&gt; &lt;/logFactories&gt; &lt;/superSocket&gt; &lt;startup&gt; &lt;supportedRuntime version=&quot;v4.0&quot; sku=&quot;.NETFramework,Version=v4.0&quot; /&gt; &lt;/startup&gt; &lt;/configuration&gt; Command运行不稳定啊啊啊 使用自定义RequestInfo，AppSession的固定数量分隔符协议 public CounterReceiveFilter() : base((byte)&apos;#&apos;, 11) { } ​ public MyAppServer() ​ : base(new DefaultReceiveFilterFactory&lt; CounterReceiveFilter, RequestInfo&gt;()) ​ { ​ } 使用自定义RequestInfo，AppSession的结束符协议协议​ class TerReceiveFilter : TerminatorReceiveFilter&lt;RequestInfoFirst&gt; { public TerReceiveFilter() : base(Encoding.Default.GetBytes(&quot;##&quot;)) //传入固定的请求大小 { } protected override RequestInfoFirst ProcessMatchedRequest(byte[] data, int offset, int length) { ///使用一个变量之前必须给它分配相应的内存空间 RequestInfoFirst info=new RequestInfoFirst(); info.totalCmd_App = &quot;Hello World&quot;; return info; } } class GameServer:AppServer&lt;GameSession,RequestInfoFirst&gt; { string TAG = &quot;GameServer:&quot;; /// &lt;summary&gt; /// AppServer only has two constructors /// &lt;/summary&gt; public GameServer() : base(new DefaultReceiveFilterFactory&lt;TerReceiveFilter, RequestInfoFirst&gt;()) { NewSessionConnected += GameServer_NewSessionConnected; NewRequestReceived += GameServer_NewRequestReceived; } private void GameServer_NewRequestReceived(GameSession session, RequestInfoFirst requestInfo) { Console.WriteLine(requestInfo.totalCmd_App); } private void GameServer_NewSessionConnected(GameSession session) { Console.WriteLine(TAG + &quot;GameServer_NewSessionConnected&quot;); } } 当错误提示为“是否缺少using指令或程序集引用”时，可以采取以下办法： 去API中找相应出错方法的命名空间。 在IDE中找到出错方法的定义处，寻找相应的命名空间。 百度寻找相应方法的命名空间。 ASCII 表对照 使用自定义RequestInfo，AppSession的头部格式固定且包含内容长度的协议 class FixedReceiveFilter: FixedHeaderReceiveFilter&lt;BinaryRequestInfo&gt; { public FixedReceiveFilter() : base(6) { } //只要输入完了长度，这个函数就会自动被触发 protected override int GetBodyLengthFromHeader(byte[] header, int offset, int length) { //这个地方计算的请求体的长度不对。 int lengthOfBody= (header[offset + 4] -48)*10 + header[offset + 5]-48; Console.WriteLine(&quot;header[offset + 4]:&quot;+header[offset + 4]+&quot;;header[offset + 5]:&quot;+header[offset + 5]+&quot;；lengthOfBody：&quot; + lengthOfBody); return lengthOfBody; } protected override BinaryRequestInfo ResolveRequestInfo(ArraySegment&lt;byte&gt; header, byte[] bodyBuffer, int offset, int length) { //因为BinaryRequestInfo中的数据成员都是只读的 //所以需要在构造这个对象的时候，给给它进行赋值。 return new BinaryRequestInfo(Encoding.UTF8.GetString(header.Array, header.Offset, 4), bodyBuffer.CloneRange(offset, length)); } } class GameServer : AppServer&lt;GameSession, BinaryRequestInfo&gt; { string TAG = &quot;GameServer:&quot;; public GameServer() : base(new DefaultReceiveFilterFactory&lt;FixedReceiveFilter, BinaryRequestInfo&gt;()) { NewSessionConnected += GameServer_NewSessionConnected; NewRequestReceived += GameServer_NewRequestReceived; } private void GameServer_NewRequestReceived(GameSession session, BinaryRequestInfo requestInfo) { Console.WriteLine(requestInfo.Key+&quot;:&quot;+requestInfo.Body); } private void GameServer_NewSessionConnected(GameSession session) { Console.WriteLine(TAG + &quot;GameServer_NewSessionConnected&quot;); } } 特别注意session、server、command的定义方法： public class GameSession : AppSession&lt;GameSession, BinaryRequestInfo&gt;{} public class GameServer : AppServer&lt;GameSession, BinaryRequestInfo&gt;{} public class RESTART : CommandBase&lt;GameSession, BinaryRequestInfo&gt;{}从上面不难看出只要是使用的session的地方不论是server还是command，他们的另外一个RequestInfo参数必须是和Session中的RequestInfo的参数是一样的，否则会出现参数类型不匹配的错误。 C#中实现接口https://www.cnblogs.com/ben-zhang/archive/2012/12/18/2823455.html SuperSocket实现接口举例 接口 // 摘要: // Receive filter interface // // 类型参数: // TRequestInfo: // The type of the request info. public interface IReceiveFilter&lt;TRequestInfo&gt; where TRequestInfo : global::SuperSocket.SocketBase.Protocol.IRequestInfo { // 摘要: // Gets the size of the rest buffer. int LeftBufferSize { get; } // // 摘要: // Gets the next Receive filter. IReceiveFilter&lt;TRequestInfo&gt; NextReceiveFilter { get; } // // 摘要: // Gets the filter state. FilterState State { get; } // 摘要: // Filters received data of the specific session into request info. // // 参数: // readBuffer: // The read buffer. // // offset: // The offset of the current received data in this read buffer. // // length: // The length of the current received data. // // toBeCopied: // if set to true [to be copied]. // // rest: // The rest, the length of the data which hasn&apos;t been parsed. TRequestInfo Filter(byte[] readBuffer, int offset, int length, bool toBeCopied, out int rest); // // 摘要: // Resets this instance to initial state. void Reset(); } 实现接口的类 class XieReceiveFilter:IReceiveFilter&lt;GameRequestInfo&gt; { public int LeftBufferSize { //必须要实现get方法。 get { return 1; } } public IReceiveFilter&lt;GameRequestInfo&gt; NextReceiveFilter { //如果不实现get方法，就会报错，就会报没有实现接口的错。 get； } public FilterState State { get { throw new NotImplementedException(); } } public GameRequestInfo Filter(byte[] readBuffer, int offset, int length, bool toBeCopied, out int rest) { throw new NotImplementedException(); } public void Reset() { throw new NotImplementedException(); } } 既然要实现接口，那么接口的返回值和函数名一节形参都是不能够改变的。 为服务器应用自己的过滤器工厂 RequestInfo public class GameRequestInfo:IRequestInfo { public string Key { get;set;} } Session ​ public class GameSession : AppSession&lt;GameSession, GameRequestInfo&gt; ​ { ​ protected override void OnSessionStarted() ​ { ​ this.Send(“Welcome to SuperSocket Telnet Server”); ​ } ​ protected override void HandleUnknownRequest(GameRequestInfo requestInfo) { this.Send(&quot;Unknow request&quot;); } protected override void HandleException(Exception e) { this.Send(&quot;Application error: {0}&quot;, e.Message); } protected override void OnSessionClosed(CloseReason reason) { //add you logics which will be executed after the session is closed base.OnSessionClosed(reason); } } Filter class XieReceiveFilter:IReceiveFilter&lt;GameRequestInfo&gt; { public int LeftBufferSize { get { throw new NotImplementedException(); } } public IReceiveFilter&lt; GameRequestInfo&gt; NextReceiveFilter { get { throw new NotImplementedException(); } } public FilterState State { get { throw new NotImplementedException(); } } public GameRequestInfo Filter(byte[] readBuffer, int offset, int length, bool toBeCopied, out int rest) { throw new NotImplementedException(); } public void Reset() { throw new NotImplementedException(); } } FilterFactory class XieReceiveFilterFactory : IReceiveFilterFactory&lt;GameRequestInfo&gt; { public IReceiveFilter&lt;GameRequestInfo&gt; CreateFilter(IAppServer appServer, IAppSession appSession, IPEndPoint remoteEndPoint) { throw new NotImplementedException(); } } Server class GameServer : AppServer&lt;GameSession, GameRequestInfo&gt; { string TAG = &quot;GameServer:&quot;; public GameServer() : base(new XieReceiveFilterFactory()) { NewSessionConnected += GameServer_NewSessionConnected; NewRequestReceived += GameServer_NewRequestReceived; } private void GameServer_NewRequestReceived(GameSession session, GameRequestInfo requestInfo) { Console.WriteLine(requestInfo.ToString()); } private void GameServer_NewSessionConnected(GameSession session) { Console.WriteLine(TAG + &quot;GameServer_NewSessionConnected&quot;); } }]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>SUPERSOCK</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_PYTHON]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-PYTHON%2F</url>
    <content type="text"><![CDATA[Python简介 python语法简洁清晰，特色之一是强制用空白符作为语句缩进。 Python具有非常丰富和强大的库。被称为胶水语言，能够把用其它语言制作的各种模块很轻松地连接在一起。 Python是完全面向对象的语言。 Python采用动态类型系统。在编译的时候，Python不会检查对象是否拥有被调用的方法或者属性，而是直至运行时，才做出检查。所以操作对象时可能会抛出异常。不过，虽然Python采用动态类型系统，它同时也是强类型的。 导入模块 import math from math import * form math import pi 在编写Python的时候尽量不要使用Tab键进行空格。 如果使用文本编辑器编辑Python的时候需要及时进行保存。 推荐的图书：《Introduction to the Theory of Computation》 在进行递归程序编程的时候不应该顺着程序进行递归调用，应该假设我已经获得了n-1的阶乘，能否通过现有的算法获得n的阶乘。 Python中对于实例的属性的定义绝对是个很奇葩的方式。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>PYTHON</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_FPGA&CPLD]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-FPGA-CPLD%2F</url>
    <content type="text"><![CDATA[FPGA(Feild Programmable Gate Array)现场可编程门列阵。属于可编程逻辑器件的一种。到目前为止已经成为实现数字系统的主流平台之一。 PLD(Programmable Logic Device)可编程逻辑器件。它的主要特点就是允许用户通过软件对其进行配置和编程，从而完成某种特定功能，且可以反复进行擦写。 在修改和升级PLD时根本不用重置PCB电路板，仅仅需要在计算机上重新书写PLD程序。 FPGA为易失性器件，掉电后配置数据会失去，因此每次上电后需要重新进行配置。 将典型的单元电路封装起来构成固定的单元电路。 设计人员应该考虑如何将可组装的软件包和软件库搭建出满足需求的功能模块甚至完整的系统。 EDK(Electronic Design Automation)工业设计自动化 由于FPGA需要反复的被烧写，所以不能够使用固定的与非门，查找表是一种很好的实现方式。 通过烧写文件改变查找表，实现对于FPGA的反复配置。实现了在相同电路情况下实现了不同的逻辑功能。 查找表本质上就是一个RAM。自己理解：综合器根据用户输入的HDL语言，将相应的逻辑电路转化为真值表，输入作为地址，然后查找真值表，将相应的内容输出即可。 可编程输入输出单元IOB，是芯片与外界电路的接口部分，完成不同电气特性下对输入输出信号的驱动与匹配要求。 CLB是FPGA内的基本逻辑单元。 软核在EDA设计领域指的是寄存器传输级模型。在FPGA设计中指的是对电路的听见描述语言，包括逻辑描述、网表和帮助文档等。 HDL是以文本形式来描述数字系统硬件结构和行为的语言。 FPGA 器件基于SRAM结构来实现可编程特性，具有集成度高、逻辑功能强等特点，但掉电后编程信息会立即丢失，芯片在每次上电之后都需要重新下载设计文件所生成的的配置数据。 如何快速高效的将配置文件写入目标器件，如果在掉电再上电后能够自动可靠的恢复配置文件，是整个系统的关键。 ISE以工程为单位对设计输入进行管理，因此首先需要建立ISE工程，然后再新建HDL文件输入HDL代码，或者新建并在HDL文件中实例化IP核。 所谓综合就是将HDL语言、原理图等输入设计翻译成与或非门和RAM触发器等基本逻辑单元的逻辑连接，并根据目标和约束条件优化所生成的逻辑连接，生成EDF文件。 Very High Speed Integrated Circuit.Hardware.Description.Language.(VHDL) VHDL打破了软硬件的壁垒。是电子系统设计者和EDA工具之间的界面。 C、C++代替汇编等语言。VHDL代替了原理图、状态转换图。 RegisterTranslateLevel(RTL) VHDL包括基本的四样：实体、结构体、配置文件、库，程序包。 实体：描述了设计单元的输入输出。是设计实体经过封装之后对外界的一个通信界面。 结构体：定义了设计单元的具体功能，描述了设计电源的行为、元件和内部的连接关系。 VHDL中有常量、变量、信号、文件自中类型。 如果实体内部需要反馈输出信号，则需要将信号定义为buffer而不是out。一个实体可以对应多个结构体，同一时刻只能有一个结构体起作用。通过configuration决定使用那个结构体进行仿真或综合实验。 在结构体中的执行是同时进行的，执行顺序与书写顺序无关。 进程语句定义顺序语句模块，用于将从外部获得的信号或内部的运算数据向其它信号进行赋值。 进程本身是并行的，但是内部的语句是顺序的。进程只有在特定的时刻才能够被激活，比如敏感信号被触发的时候。 元件例化语句 元件例化引入一种连接关系，将预先设计好的实体定义为元件，并将此元件与当前设计实体中的端口相连接，从而为当前设计实体，引入一个新的低一级的设计层次。 在结构体中的执行是同时进行的，执行顺序与书写顺序无关。 进程语句定义顺序语句模块，用于将外部获得的信号值或内部的运算数据向其它的信号进行赋值。 假定主存可以在一个时钟周期内完成一次存取操作，而且可以和CPU同步工作。系统使用同一个主存单元。指令读取和数据访问都使用同一组存储器。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>FPGA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_一步步编写嵌入式操作系统]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-%E4%B8%80%E6%AD%A5%E6%AD%A5%E7%BC%96%E5%86%99%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[在琳琅坂木的ARM编译器中挑选一款用来编译源程序就成了必须首先要解决的问题。 嵌入式开发时，通常都是在PC上对源代码进行编译，当生成可执行代码后下载到目标ARM平台上，人们将这种编译过程称为交叉编译或跨平台编译，而将一整套用于交叉编译的工具称为交叉编译工具链。 名为arm-linux-gcc、arm-elf-gcc的编译器的含义：开头的arm代表编译结束后将生成arm体系结构机器码。中间的Linux代表该编译器在编译时对Linux系统做了特定的优化、elf代表更适合生成通常的可执行程序。 编译生成的目标代码是arm体系结构的机器码，我们无法将其在我们的机器上运行，道理是很明显的。解决方法是购买一块arm开发平台、另一种方法就是使用类似于Android虚拟机似的一个东西，而这个东西就叫做虚拟机，Skyeye是其中一款。 SkyEye是一个开源项目，目标是在Linux或Windows上实现一个传软件集成开发环境，模拟常见的计算机系统。是一个指令集模拟器。能进行源码级的分析与测试。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>嵌入式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_DATABASE]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-DATABASE%2F</url>
    <content type="text"><![CDATA[sqlyog中不显示创建的数据库的原因解释 在打开sqlyog的时候，需要配置ip地址，用户名和密码，当然下面还有天数据库名称的，如果你填了一个，当然这sqlyog里面只能看到你填过的这个数据库啦，如果你这一栏空白不填的话，sqlyog里面会显示所有的你创建的数据库名啦。 当然，还有一种情况时，就是有可能你创建的这个数据库在另一个帐号下面创建的，在这个账号上面当然看不到！ 无法打开物理文件 XXX.mdf”。操作系统错误 5:”5(拒绝访问。)”的解决办法 解决方案 一：数据库使用windows验证，将被附加的数据库移植到根目录下，即MSSQL的DATA目录下。 解决方案二：将要附加的.mdf文件和.ldf文件更改权限，选中.mdf文件—-&gt;右击—–&gt;属性—–&gt;安全——&gt; Authenticated Users—-&gt;编辑—-&gt;安全控制允许，按照同样的方法，更改日志文件，然后附加数据库既可。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>DATABASE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_MAKEFILE]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-MAKEFILE%2F</url>
    <content type="text"><![CDATA[编译器 cc、gcc、g++、CC 的区别 只要写好了Makefile，只需要一个make命令，整个工程完全自动编译。 make能够进行编译、链接 gcc -c xcxcx.c ： -c 编译C代码，生成该文件的obj文件gcc xcxcx.o -o dest ： -o 链接各个obj文件，生成目标执行程序]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>MAKEFILE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_JSON]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-JSON%2F</url>
    <content type="text"><![CDATA[JSON官网 json成为理想的数据交换语言 json构建于两种结构 名称/值 对集合。不同的语言中被理解为不同的东西，比如：对象、记录、结构。 值得有序列表。大多数语言中，被理解为数组。 一种数据格式在同样基于这些结构的编程语言之间交换成为可能。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_NS2]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-NS2%2F</url>
    <content type="text"><![CDATA[ns2的默认文件是在 /ns-2.35/tcl/lib/ns-default.tcl中进行定义的 DropTail 是NS2中的一种队列模型，丢弃尾部队列，以获得更好的QoS服务]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>NS2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_GITHUB]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-GITHUB%2F</url>
    <content type="text"><![CDATA[GitHub简介。 Git是由Linux之父 Linus Tovalds为了更好地管理Linux内核开发而创立的分布式版本控制/软件配置管理软件。 Git是一个管理你的“代码的历史记录”的工具。正是GitHub，让社会化编程称为现实。github是一个基于git的代码托管平台，付费用户可以建私人仓库，我们一般的免费用户只能使用公共仓库，也就是代码要公开。 教程网址： GIT基本教程 GIT下载使用GitHub的网址GitHub的使用 GitHub学习地址 Git下载链接 tortoisegit的下载链接 Git详解之一 Git起步 Git详解之二 Git基础 Git详解之三 Git分支 Git详解之四 服务器上的Git Git详解之五 分布式Git Git详解之六 Git工具 Git详解之七 自定义Git Git详解之八 Git与其他系统 Git详解之九 Git内部原理 git支持中文 起步版本控制版本控制(VersionControlSystem)是一种记录若干文件内容变化，以便将来查阅特定版本修订情况的系统。 Git基础 在保存到Git之前，所有数据都要进行内容的检验和计算，并将该结果作为数据的唯一标识和索引。Git的工作完全依赖于这类指纹字符串。所有保存到Git数据库中的东西都是用此哈希值来做索引的，而不是靠文件名。 Git提供了一个叫做git config的工具，专门用来配置或读取相应的工作环境变量。正是由于环境变量，决定了各个环节的具体工作方式和行为。基础获取项目的Git仓库 在现存的目录下，通过导入所有文件来创建新的Git仓库。 从已有的Git仓库克隆出一个新的镜像仓库。命令git config :专门用了配置或读取相应的工作环境变量 git init 已经完成了初始化 Git的分支模型称为“必杀技特性”。Git保存的不是文件差异或者变化量，而只是一些列文件快照。分支其实就是从某个提交对象往回看历史。在不同的分支之间进行文件的修改，是互不影响的。在某个分支中没有提交的修改会阻止你切换分支。 分支 进行合并时，如果顺着一个分支走下去能够到达另一个分支的话，那么Git在合并两者时，智慧简单地把指针右移，因为这种单线的历史分支不存在任何需要解决的分歧，所以这种合并方式称为快进。正是由于分支管理的快捷，才衍生出了这类典型的工作模式，可以根据项目的实际情况选择一种用用看。 一旦分支中的提交对象发布到公共仓库，就千万不要对该分支进行衍合操作。 如果你遵循这条金科玉律，就不会出差错。否则，人民群众会仇恨你，你的朋友和家人也会嘲笑你，唾弃你。 Git服务器 一个大家都可以访问的共享仓库，从那里推送和拉去数据。我们把这个仓库称为Git服务器。 Git可以使用四中主要的协议来传输数据：本地传输、ssh协议、Git协议和HTTP协议。除了HTTP协议之外其他的协议都需要在服务器端安装并运行Git。问题 初始化之后看不到.git目录。但是能够从GitHub上进行拷贝 知识点译注：其实git add 的潜台词就是把目标文件快照放入暂存区域，也就是 add file into staged area，同时未曾跟踪过的文件标记为需要跟踪。这样就好理解后续 add 操作的实际意义了。 Git 基本命令 git config (1.5) git help (1.6) git init (2.1) git add (2.1) git clone (2.1) git status (2.1) cat touch (2.1) 忽略某些文件 git diff (2.3) git diff –cached (2.3) git commit (2.4) git rm 如果GitBash卡了，可以使用Ctrl+C强制退出。 git mv (2.4) git log git commit –amend git reset HEAD git checkout – git remote git fetch git pull git tag git别名第三章 在Linux中能够使用的那一套命令，在GitBash中一样使用。 git branch git checkout git merge git branch -d git branch -v]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>GITHUB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_ANDROID]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-ANDROID%2F</url>
    <content type="text"><![CDATA[android 项目各个文件夹的含义 https://www.cnblogs.com/laoyimou/p/6640277.htmlLOOPER http://blog.csdn.net/sd19871122/article/details/51352220 http://blog.csdn.net/heng615975867/article/details/9194219Android更改应用程序图标 activity和application里都可以设置android:label标签，activity的优先级高于application，也就是说两者都设置这个标签的话，activity的值覆盖application。 应该在入口activity中也进行应用图标的设置。 当图标设置完成之后需要重新rebuild项目，才可以。小米手机 小米手机关于内存读写权限的问题，不仅需要在配置文件中打开读写权限，而且还需要自己，手动开启读写权限。 众多手机在进行Android调试的时候，需要在开发者选项中开启一个强制允许调试的选项，多少会有以下帮助的。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>ADNROID</tag>
        <tag>CODING</tag>
        <tag>学习札记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_MATLAB]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-MATLAB%2F</url>
    <content type="text"><![CDATA[都是使用矩阵进行计算。 调用函数。.m调用.m MATLAB中可以看到中间变量的值。 见招拆招。 安装包:https://pan.baidu.com/s/1nuDdb3j密码：f4rg]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_强弱动态静态类型]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-%E5%BC%BA%E5%BC%B1%E5%8A%A8%E6%80%81%E9%9D%99%E6%80%81%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[弱/强类型指的是语言类型系统的类型检查的严格程度。弱类型相对于强类型来说类型检查更不严格，比如说允许变量类型的隐式转换，允许强制类型转换等等。强类型语言一般不允许这么做。这篇wiki上有例子 动/静态类型指的是变量与类型的绑定方法。静态类型指的是编译器在compile time执行类型检查，动态类型指的是编译器（虚拟机）在runtime执行类型检查。简单地说，在声明了一个变量之后，不能改变它的类型的语言，是静态语言；能够随时改变它的类型的语言，是动态语言。因为动态语言的特性，一般需要运行时虚拟机支持。https://en.wikipedia.org/wiki/Type_system 例子 无类型： 汇编 弱类型、静态类型 ： C/C++ 弱类型、动态类型检查： Perl/PHP 强类型、静态类型检查 ：Java/C# 强类型、动态类型检查 ：Python, Scheme 静态显式类型 ：Java/C 静态隐式类型 ：Ocaml, Haskell 讲解]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>静态类型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_JAVA]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-JAVA%2F</url>
    <content type="text"><![CDATA[线程线程的状态 创建状态：调用new方法产生一个线程对象后、调用start方法前所处的状态。当线程处于创建状态时，可以使用start方法进入可运行状态，也可以使用stop方法进停止状态。 运行状态：进入该状态说明线程具有了可以运行的条件，但线程不一定处于运行状态。在但处理器系统中运行多线程程序时，一个时间点只能运行一个线程。 不可运行状态：线程被挂起或者发生阻塞。 退出状态：一个线程可以从任何一个状态中调用stop方法进入退出状态。线程一旦进入退出状态就不存在了，不能再返回到其它状态。除此之外当一个线程执行完run方法，也会进入退出状态。 在每一个特定的时间点上，每一个系统处理器只能运行一个线程。 如果线程进入不可执行状态，需要通过resume、notify等方法返回到可执行状态。 suspend和resume方法的替代方法是wait和sleep。线程的退出通常是采用自然终止的方法，建议不要人工调用stop方法。 join。从字面上来看就是让这个线程加入进来。如果没有参数的话需要等到该线程执行完毕才会向下执行。如果是有参数的话，就不管你有没有执行完毕我都会向下执行，我都仅仅是等待你那些时间而已。http://blog.csdn.net/dwood01/article/details/8133769 在Java中，CPU的使用通常是抢占式调度模式不需要时间片分配进程。抢占调度模式是指许多线程同时处于可运行状态，但只有一个线程正在运行。当线程一直运行到结束、进入不可执行状态、更高优先级的线程变成可运行状态，它将会让出CPU。 Java中通过消息实现通信，wait()、notify()、notifyAll()方法可完成线程间的消息传递。 将方法声明为同步；对于同步块，只有该方法获得对象的锁时才能够执行。 当两个并发线程访问同一个对象的synchronized(o)同步代码块的时，一段时间内只能有一个线程在运行。另外的线程必须等到当前线程执行完同步代码块释放锁后，获得所得线程才能够执行同步代码块。对方法中的局部变量进行同步是没有任何效果的。 Java中同一个文件中如果想写多个类的话，只能有一个类被声明为public。 异常什么是异常JAVA中的异常是一个对象，描述了代码中出现异常的情况。在代码运行异常时，在有异常的方法中创建并抛出一个表示异常的对象，然后在相应的异常吹了模块中进行处理 分类RunTimeException主要用来描述编程产生的错误。对于Exception类中的异常，除了RuntimeException以外其它的类在程序中出现是必须被处理的，而不像RuntimeException中的异常会由系统自己处理。 THROW 语句抛出异常 语句抛出Exception的时候需要在方法体上使用Throws抛出异常才可以。 语句抛出其它的异常的使用，不用再方法体上使用Throw是抛出异常就可以。 ​ Exception var=new Exception(String message); var.getMessage(); //首先构造一个带有信息的异常，然后使用getMessage获得到这个异常的信息。 THROWS 方法头使用，抛出异常 系统自动抛出异常 注意 如果是捕捉IO输入输出流中的异常，一定要在try{…}catch{…}后加finally{…}把输入输出流关闭； 如果在函数体内用throw抛出了某种异常，最好要在函数名中加throws抛异常声明，然后交给调用它的上层函数进行处理； 在捕捉异常的try{…}语句块中，如果出现了异常，则该语句(出现异常的语句)后的程序语句都不执行，而是跳到catch{…}语句块中执行异常的处理。 如果一个函数没有用throws进行抛异常，在调用该函数的方法也同样可以捕捉异常。 查看字节码 节码使用javap -verbose -private xxxx输出查看。 写一个方法，这个方法又抛出异常的可能性，最好的办法就是把对异常的处理留给方法的调用者。throws是隐式抛出异常。throw使用异常的再次抛出。异常的再次抛出是指当捕获到异常的时候并不对他进行直接处理而是把它抛出，留给上一层进行处理。 RuntimeException类的子类通常指一些运行时错误引起的异常，多以可以不处理它，同时Error错误是无法处理的。所以把它们统称为未检查异常。而剩下的异常类则被称为检查异常。对于未检查异常在使用throw抛出时不需要使用Throws进行声明，但是对于检查异常需要使用throws进行声明。 绘制图形注 单独的一个组件无法显示出来，只有添加到容器中才能够显示出来。 为了实现容器中跨平台的特性、组件的大小改变、位置转移等动态特性，Java提供了布局管理器处理机制。布局管理器可以实现容器内部组件的排列顺序、大小、位置、以及窗口大小变化。 容器中组件的大小和位置都是委托给布局管理器进行管理的，程序员无法设置这些属性。如果已经设置布局管理器在容器中，使用Java语言提供的setocation()、setSize()、、setBounds()等方法不会起到任何作用。 如果用户必须设置组件的大小和位置。则必须设置容器布局管理器为空，方法为：setLayout(null)； 句柄 HANDLE含义 句柄是一种特殊的智能指针。 整个Windows编程的基础。一个句柄是指使用的一个唯一的整数值，即一个4字节长的数值，来标识应用程序中的不同对象和同类中不同的实例。 句柄的本质：一个唯一的整数，作为对象的身份id，区分不同的对象，和同类中的不同实例。程序可以通过句柄访问对象的部分信息。句柄不代表对象的内存地址。句柄简单例子&nbsp;&nbsp;&nbsp;&nbsp; 每种编程语言都有自己的数据处理方式。有些时候，程序员必须时刻留意准备处理的是什么类型。您曾利用一些特殊语法直接操作过对象，或处理过一些间接表示的对象吗（C 或C++里的指针）？所有这些在Java 里都得到了简化，任何东西都可看作对象。注意，尽管将一切都“看作”对象，但操纵的标识符实际是指向一个对象的“句柄”（Handle）。还可看到有的人将其称作一个“引用”，甚至一个“指针”。可将这一情形想象成用遥控板（句柄）操纵电视机（对象）。只要握住这个遥控板，就相当于掌握了与电视机连接的通道。但一旦需要“换频道”或者“关小声音”，我们实际操纵的是遥控板（句柄），再由遥控板自己操纵电视机（对象）。如果要在房间里四处走走，并想保持对电视机的控制，那么手上拿着的是遥控板，而非电视机。此外，即使没有电视机，遥控板亦可独立存在。也就是说，只是由于拥有一个句柄，并不表示必须有一个对象同它连接。所以如果想容纳一个词或句子，可创建一个String 句柄：String s;但这里创建的只是句柄，并不是对象。若此时向s 发送一条消息，就会获得一个错误（运行期）。这是由于s 实际并未与任何东西连接（即“没有电视机”）。因此，一种更安全的做法是：创建一个句柄时，记住无论如何都进行初始化：String s = “asdf”;然而，这里采用的是一种特殊类型：字串可用加引号的文字初始化。通常，必须为对象使用一种更通用的初始化类型。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_C2]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-C2%2F</url>
    <content type="text"><![CDATA[函数内联 函数内联，其目的是为了提高函数的执行效率。 关键字Inline必须与函数体放在一起才能够使函数成为内联，仅将inline放在函数声明前面不起任何作用。 //错误 inline void Foo(int a,int b); //正确 void Foo(int a,int b); inline void Foo(int a,int b) { } //内联，不提倡 class A { public : void Foo(int a) { } }; //内联，提倡 class A { public : void Foo(int a); } inline void A::Foo(int a) { } 慎用内联，内联是以代码膨胀为代价的，仅仅省去了函数调用的开销 内联的工作方式。对于任何内联函数，编译器在符号表中放入函数的名称、返回值、参数等。如果内联函数没有错误，整个函数体也会被放到符号表中。在进行内联函数的调用时，编译器首先会检查调用是否安全，如果安全的话，内联函数的代码就会直接替换为函数调用，从而省去了函数调用的开销。 不宜使用内联的情况 函数体内的代码过长。 函数体内出现循环 编程是多费了一些心思，少了一些痛快，这才是编程的艺术。构造、析构、拷贝、赋值#include &lt;iostream&gt; #include using namespace std; class String { public: String(char *str=NULL); String(const String &amp;other); String&amp; operator =(const String &amp;other); ~String(void); private: char *m_Data; }; String::String(char *str) { if(str==NULL) { m_Data=new char[1] ; *m_Data=&apos;\0&apos;; } else { m_Data=new char[strlen(str)+1]; strcpy(m_Data,str); } } String::String(const String &amp;other) { m_Data=new char[strlen(other.m_Data)+1]; strcpy(m_Data,other.m_Data); } String&amp; String::operator =(const String &amp;other) { if(this==&amp;other) return *this; delete [] m_Data; m_Data=new char[strlen(other.m_Data)+1]; strcpy(m_Data,other.m_Data); return *this; } String::~String() { delete [] m_Data; } int main() { return 0; } 对于任意一个类，C++编译器会自动为类产生四个缺省的函数：构造函数、析构函数、拷贝函数、赋值函数。一只公鸡使劲地追赶一只刚刚下蛋的母鸡，因为母鸡下了鸭蛋。.h .gch文件 概念gch即预编译头，将头文件预编译为二进制代码后后续编译使用。当多个源文件包含一个头文件，正常流程是将其在每个源文件中解析一遍，造成重复浪费。使用gch，将头文件作预编译头形成中间处理的二进制代码，然后再包含进源文件中。 适用gch适用于被多个源文件包含的头文件，且头文件不会经常做修改。 注意gch提高了编译速度，但需要注意在默认情况下gch不会因为头文件的更新而更新，从而在编译过程中形成一个不容易发现的坑。需要将头文件和gch设置为依赖关系。C工程 .h文件叫做头文件，不能够被编译。”#include”叫做编译预处理指令，可以简单理解成，在1.cpp中的”#include 1.h”指令把1.h中的代码在编译前添加在了1.cpp的头部。 每个.cpp文件都会被编译，生成一个.obj文件，然后所有的.obj文件链接所有的.obj文件链接起来，可执行文件就生成了。 c语言和c++都是这样的，声明和定义要分开。要想使用的话需要使用externpragma once 与 ifndef pragma once 是新兴的防止头文件被重复包含的语句。两者区别见pragma once 与 ifndef的区别 if 与 else 匹配问题与是完全不同的两个运行结果。原因是作用域的问题。 为什么使用using namespace std; #include &lt;iostream.h&gt;非标准输入输出流 #include &lt;iostream&gt;标准输入输出流 C++中为了避免名字定义冲突，特别引入了“名字空间的定义”，即namespace。 当代码中用&lt;iostream.h&gt;时，输出可直接引用cout&lt;&lt;x;//&lt;iostream.h&gt;继承C语言的标准库文件，未引入名字空间定义，所以可直接使用。 当代码中引入&lt;iostream&gt;时，输出需要引用std::cout&lt;&lt;x;如果还是按原来的方法就会有错。 使用&lt;iostream&gt;时，引入std::有以下方法： 1. using namespace std; cout&lt;&lt;x; 2. using std::cout; cout&lt;&lt;x; 3. 最基本的std::cout&lt;&lt;x; 这回你该知道为什么通常用#include &lt;iostream&gt;时， 要用using namespace std;了吧。如果你不用这个，就要在使用cout时，用后两种方法了。 其他头文件也是同样的道理。 （有“.h”的就是非标准的，C的标准库函数，无“.h”的，就要用到命令空间，是C++的。还有一部分不完全是有“.h”和没“.h”的差别。例如：math.h和cmath） 为什么在c++程序里可以直接用printf 和scanf iostream是没有包含C语言中的输入输出函数的，这个头文件是C++中输入输出流的，你那种情况一般是编译环境默认连接了stdio.h造成的。那是不是要用c的输入输出加上&lt;stdio.h&gt;比较安全？是不是所有编译器都支持这种连接呢？应该是的，头文件的默认添加可以在编译环境中设置。不过原则上是应该加上相应的头文件的，一般还加上头文件比较好。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CODE_C1]]></title>
    <url>%2F2018%2F12%2F29%2FCODE-C1%2F</url>
    <content type="text"><![CDATA[要写纯粹的，脱离低级趣味的 函数！GNU(GNU’s Not Unix)GNU操作系统是一种由自由软件构成的类Unix操作系统，该系统基于 Linux 内核，目标在于建立一个完全相容于UNIX的自由软件环境。GNU工程创始于1984年，旨在开发一个完整 GNU系统，GNU这个名字是 “GNU’s Not Unix!”的递归首字母缩写词，”GNU” 的发音为g’noo，只有一个音节，发音很像“grew”，但需要把其中的 r 音替换为n音，系统的名称，GNU是一个递归的缩写，意为GNU不是Unix的一种致敬Unix的技术思路，而在同一时间说GNU是不同的东西。 CONST CONST定义的是变量，是不可改变的变量。因为是不可改变的所以需要在定义的时候就进行初始化，因为如果现在不进行初始化，等到后来也就没有办法进行初始化了。 在C语言中如果使用变量（包含const）声明数组的大小在编译的时候可以通过，但是根本就没有办法运行。但是在C++中是可以运行的。定义一个数组必须指定数组元素的个数。C与C++中对const的含义是不同的，在C++中对const的含义做了扩充。 编译器扩展：编译器，太智能了。c不允许变量赋值给数组，编译器允许。这就是个例子。 .c与.cpp文件的区别 .c文件只能够书写C语言代码。.cpp既可以书写C语言程序也可书写C++程序。 gcc认为.c的为C程序，.cpp的为C++程序； g++认为.c的为C++程序，.cpp的为C++程序； VC++的编译器cl认为.c的为C程序，.cpp的为C++程序； C程序与C++程序中同样的函数在编译后的obj文件中的symbol是不同的，所以以C方式编译的obj文件与以C++方式编译的obj文件无法成功链接。const volatile int a=10; 需要使用codeblock进行调试，查看寄存器的值 const 表示在本段程序中不能对a做修改，任何修改都是非法的。 volatile 表示另一个程序段则完全有可能修改，因此编译器最好不要做太激进的优化。 const 的含义是“请作为常量使用”，而并非“放心吧，那肯定是常量” volatile 的含义是“请不要做没谱的优化，这个值可能变掉的”，而并非“你可以修改那个值。 因此const 与 volatile 本来就不矛盾。注： const修饰的变量不允许在这里修改不代表不允许别处修改。 对于非指针非引用的变量，const volatile同时修饰的意义确实不大。 两者同时修饰一个对象的典型情况，是用于驱动访问外部设备的只读寄存器。 大端与小端定义 大端：数据的高字节存储在内存空间的低地址上，数据的低字节存储在内存空间的高地址上。 小端：数据的高字节存储在内存空间的高地址上，数据的低字节存储在内存空间的低地址上。如何判断一个系统是大端还是小端 #include &lt;stdio.h&gt; bool isSystemLittleDian() {union test { int i; char a; }u; u.i=1; return u.a==1; } int main() {if(isSystemLittleDian()) printf(&quot;该系统是小端&quot;); else printf(&quot;该系统是大端&quot;); return 0; }链接网址 大端小端练习题1 大端小端练习题2 符号 编译器的确会将注释剔除，但是不是简单的剔除，而是使用空格代替原来的注释。 注释不能够出现在C语言的任何地方。 C语言轻松一刻 汇编程序的注释，是以;开头的。贝多芬于1827年去世，而1827的十六进制正是723.注释：R.I.P.V.B.)的意思是：(Rest In Peace,Ludwing Van Neethoven，安息吧，路德维希.凡.贝多芬) 大师们把代码写成这样是经典，你把代码写成这样是垃圾。 预处理#define 试图使用宏开始或结束一段注释是不行的。 想要很好的使用宏那就不要吝啬括号。 空格在宏定义的时候是有效的，在使用宏函数的时候会被编译器忽略掉。 整数常量后面接UL表示类型，606024365UL 等价于 ((unsignedlong)606024365) 宏的声明周期从#define 开始,到 #undef结束 条件编译对于程序的移植和调试是很有用的。 #include的路径也有点需要进行说明：include支持相对路径，格式如蚁迹寻踪(.代表当前目录..代表上层目录) 如何通过定义宏来控制源代码的版本？ 内存对齐指正加减运算int main() { int a[5]={1,2,3,4,5}; int *ptr=(int*)(&amp;a+1); printf(&quot;%d,%d\n&quot;,*(a+1),*(ptr-1)); return 0; } &amp;a+1 即 &amp;a+5*size(int);一个类型为T的指针的移动，是以sizeof(T)为单位进行移动的。 指针与数组 C语言中，当一维数组作为函数参数的时候，编译器总会把它解析成一个指向首元素首地址的指针。 函数本身是没有类型的，只有函数的返回值才有类型。 实际传递第数组大小与函数形参指定的数组大小没有关系。 main函数内的变量不是全局变量而是局部变量，只不过器声明周期和全局变量一样长而已。全局变量一定是定义在函数外部的。C语言中的内存区域： 静态区：保存自动全局变量和static变量。 栈：保存局部变量。 堆：由malloc系列函数或new操作符分配的内存。 只有字符串常量才有结束标志符。下面这种写法就没有结束标志符: char a[7]={&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;,&apos;f&apos;}; 会产生泄漏的内存就是堆上的内存（这里不讨论资源或者是句柄的泄漏）也就是说由malloc系列函数或new操作符分配的内存。如果用完之后没有及时free或delete，这块内存就无法释放，知道整个程序终止。 free(p)之后必须进行p=NULL;否则p就变成了一条野狗。 void whenEnd() { free(p); p=NULL; } 函数就是一些语句的集合。 C语言中，函数的static局部变量是函数的记忆存储器。建议精良少用static局部变量。 有的时候函数不需要返回值，但是为了增加灵活性如支持链式表达，可以附加返回值。如：strcpy函数 int len=strlen(strcpy(strDest,strSource)); ASSERT 函数声明 void assert( int expression ); assert的作用是现计算表达式 expression ，如果其值为假（即为0），那么它先向stderr打印一条出错信息，然后通过调用 abort 来终止程序运行。 在调试结束后，可以通过在包含#include &lt;assert.h&gt;的#ifdef NDEBUG语句之前插入 #define NDEBUG 来禁用assert调用即可。 比较好的在程序中使用assert的地方： 空指针检查。例如，针对一个函数的参数进行空指针检查。你可以这样使用：assert (pointer != NULL);，产生的错误会像这样：Assertion ‘pointer != ((void *)0)’ failed。这样，当出现空指针时，你的程序就会退出，并很好的给出错误信息。 检查函数参数的值。例如，如果一个函数只能在它的一个参数foo为正值的时候被调用，你可以在函数开始时这样写:assert (foo &gt; 0);，这将帮助你检测函数的错误使用，这也给源代码阅读者很清晰的印象，那就是在这里对函数的参数值有限制。 使用原则 每个assert只检验一个条件，因为同时检验多个条件时，如果断言失败，无法直观的判断是哪个条件失败。 //不好 assert(nOffset&gt;=0 &amp;&amp; nOffset+nSize&lt;=m_nInfomationSize); //好 assert(nOffset &gt;= 0); assert(nOffset+nSize &lt;= m_nInfomationSize); 排序 10W个数据进行排序，冒泡46.44S，快排0.8S。 1000W个数据进行快排， 别看free和delete的名字恶狠狠，其实它们人很好的，它们只是切断了指针和内存之间的联系，并没有把指针干掉。(但是同时让指针成为了野指针)。指针有一些“似是而非”的特征： 指针消亡了，并不表示它所指向的内存会被自动释放。 内存释放了，并不表示指针会消失或者变成NULL指针。 我就认为程序终止了运行，一切指针都会消亡动态内存会被操作系统回收。既然如此，在程序临终前，就可以不必释放内存、不必将指针设置成NULL了。终于可以偷懒而不会发生错误了。这种想法是错误的，如果别人把那段程序取出来用到其它的地方怎么办？malloc、free与new、delete 使用new为int等内部类型分配一个空间。 int *p=new int[length]; 使用new为对象数组分配空间,此时只能够使用无参数的构造函数进行分配，不能够使用有参数的构造函数进行分配。 Obj *object=new Obj[100]; 使用delete释放new分配的对象数组时，不要丢掉[].4 delete [] object; malloc、free 与 new、 delete的区别见课本P52讲的太好了。 函数重载 如果两个函数的函数名相同不同的仅仅是返回值类型，那么这个函数有的时候能够重载有的时候不能够重载，例如下面的两个函数 void Function(void); int Function(void); 如果使用： int a=Function();来进行调用则能够实现重载。如果使用： Function(); 来进行调用，则无法实现重载。 如何在C++中调用已经编译好的C程序。 需要使用 extern “C” { void foo(int x,int y); } 重载、覆盖于隐藏 隐藏 如果派生类和基类的函数名相同，但是函数的参数不同。那么不管基类函数有没有virtual，那么基类函数将被隐藏。 如果派生了和基类的函数名相同，但是函数的参数也相同。那么如果基类函数没有viritual，那么基类函数将被隐藏。 重载 相同的范围（在一个相同的类中） 函数名字相同 参数不同 virtual关键字可有可无 覆盖 不同的范围（基类和派生类） 函数名字相同 参数相同 基类必须具有virtual关键字参数值的缺省 参数值的缺省只能够出现在函数的声明中，不能够出现在函数的定义中。 //正确 void Func(int a,int b=1); //错误 void Func(int a,int b=1) { } 如果函数有多个参数那么缺省只能够从后向前缺省。 不合理的使用缺省值将导致重载函数的二义性。 #include &lt;iostream&gt; using namespace std; void Output(int a); //缺省参数值，将导致函数重载 void Output(int a,float b=1.1); int main() { Output(1); Output(1,1.4); return 0; } void Output(int a) { cout&lt;&lt;&quot;Output_Int &quot;&lt;&lt;a&lt;&lt;endl; } void Output(int a,float b) { cout&lt;&lt;&quot;Output_Float &quot;&lt;&lt;a&lt;&lt;&quot; , &quot;&lt;&lt;b&lt;&lt;endl; } ​​ 运算符重载 如果运算符被重载为全局函数，那么只有一个参数的运算符叫做一元运算符，有两个参数的运算符叫做二元运算符。 如果运算符被重载为类的成员函数，那么一元运算符没有参数，二元运算符只有一个右侧参数，因为对象自己成了左侧参数。 不能够重载的运算符 不能改变C++内部数据类型（如int,float等）的运算符 不能重载 “*” 运算符 不能重载目前C++运算符集合中没有的符号。 对于已经存在的运算符进行重载时，不能改变优先级规则，否则将引起混乱。]]></content>
      <categories>
        <category>学习札记-CODING</category>
      </categories>
      <tags>
        <tag>CODING</tag>
        <tag>学习札记</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MacBookPro-10.13.3-修改管理员名称后变为普通用户]]></title>
    <url>%2F2018%2F12%2F23%2FMacBookPro-10-13-3-%E4%BF%AE%E6%94%B9%E7%AE%A1%E7%90%86%E5%91%98%E5%90%8D%E7%A7%B0%E5%90%8E%E5%8F%98%E4%B8%BA%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7%2F</url>
    <content type="text"><![CDATA[已有方法 command + r command + s 问题描述（针对MarkbookPro10.13.3） 第一种方法是修改用户密码，并不是创建新的管理员用户。 第二种方法首次尝试出现： disk write only / .AppleSetupDone isn’t a file or dictory. 同时伴随着 bash-sh13: 解决方案 利用第一种方法在实用工具中重新安装系统。 安装完成后系统版本变为10.13.7，然后再使用第二种方法，就能够顺利删除.AppleSetupDone文件 重启，设置管理员用户]]></content>
      <categories>
        <category>MacBook</category>
      </categories>
      <tags>
        <tag>MacBook-丢失管理账户</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MacbookPro-Terminal-GPG-看不到公钥用户ID]]></title>
    <url>%2F2018%2F12%2F23%2FMacbookPro-Terminal-GPG-%E7%9C%8B%E4%B8%8D%E5%88%B0%E5%85%AC%E9%92%A5%E7%94%A8%E6%88%B7ID%2F</url>
    <content type="text"><![CDATA[问题描述 在MacBookPro10.13.6 Terminal安装GPG导入公钥后看不到用户ID 解决方法 安装GPGkeychain，导入公钥后，右键详细信息查看用户ID 在Terminal下进行明文加密]]></content>
      <categories>
        <category>GPG</category>
      </categories>
      <tags>
        <tag>GPG-用户ID</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HEXO免密提交.md]]></title>
    <url>%2F2018%2F12%2F23%2FHEXO%E5%85%8D%E5%AF%86%E6%8F%90%E4%BA%A4%2F</url>
    <content type="text"><![CDATA[问题描述 按照网上教程进行GitHub与HEXO关联以期实现免密部署，但是未成功…. 解决方案 首先确定本地是否生成ssh密钥对，MacBookPro10.13.6 中没有.ssh目录(反正我是没有找到..) 是，继续进行 否，自主生成 SSH测试 ssh -T git@github.com 设置权限 根据2中提示向 /etc/hosts 添加类似如下文字：192.30.252.128 github.com 加入Agent，命令如下： ssh-agent -s ssh-add ssh-key的路径/ssh-key私钥文件名 更改GitHub中对应博客的仓库为use-ssh 找到对应仓库 点击 “Clone or Download” 更改为 “Use SSH” 更改站点配置文件中的deploy的GitHub地址为使用ssh后的地址 重新部署即可免密提交 PS Error: Permission denied (publickey)]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>HEXO-免密提交</tag>
      </tags>
  </entry>
</search>
